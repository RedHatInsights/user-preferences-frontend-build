{"version":3,"file":"js/Notifications.42936ce3cdea410ec1a7.js","mappings":"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","sources":["webpack:///./src/api.js","webpack:///./src/redux/actions/email-actions.js","webpack:///./src/SmartComponents/FormComponents/DescriptiveCheckbox.js","webpack:///./src/SmartComponents/FormComponents/Loader.js","webpack:///./src/SmartComponents/FormComponents/DataListLayout.js","webpack:///./src/SmartComponents/FormComponents/BulkSelectButton.js","webpack:///./src/SmartComponents/FormComponents/componentTypes.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/functions.js","webpack:///./src/PresentationalComponents/Notifications/urlSync.js","webpack:///./src/PresentationalComponents/Notifications/TabsMenu.js","webpack:///./src/PresentationalComponents/Notifications/Tabs.js","webpack:///./src/PresentationalComponents/Notifications/TabGroup.js","webpack:///./src/PresentationalComponents/Notifications/utils.js","webpack:///./src/PresentationalComponents/shared/FormButtons.js","webpack:///./src/PresentationalComponents/Notifications/NotificationTemplate.js","webpack:///./src/PresentationalComponents/Notifications/Notifications.js","webpack:///./src/redux/actions/notifications-actions.js","webpack:///./src/config/ lazy ^\\.\\/.*$ namespace object"],"sourcesContent":["import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport { instance };\n\ninstance.interceptors.response.use((response) => {\n  if (response?.config?.data) {\n    try {\n      return JSON.parse(response.config.data);\n    } catch (_e) {\n      return response.config.data;\n    }\n  }\n\n  return response;\n});\n\nexport const getApplicationSchema = (\n  application,\n  apiVersion = 'v1',\n  resourceType = '',\n  url\n) =>\n  instance.get(\n    `/api/${application}/${apiVersion}${url || `/user-config/${resourceType}`}`\n  );\n\nexport const saveValues = async (\n  application,\n  values,\n  apiVersion = 'v1',\n  resourceType = '',\n  url\n) =>\n  instance.post(\n    `/api/${application}/${apiVersion}${url || `/user-config/${resourceType}`}`,\n    values\n  );\n","import { getApplicationSchema, saveValues as save } from '../../api';\nimport { ACTION_TYPES } from '../action-types';\nimport config from '../../config/config.json';\n\nexport const getEmailSchema = ({\n  application,\n  apiVersion,\n  resourceType = 'email-preference',\n  schema,\n  url,\n  apiName,\n}) => ({\n  type: ACTION_TYPES.GET_EMAIL_SCHEMA,\n  payload:\n    schema ||\n    getApplicationSchema(apiName || application, apiVersion, resourceType, url),\n  meta: {\n    appName: application,\n    notifications: {\n      rejected: {\n        variant: 'danger',\n        title: \"Request for user's configuration failed\",\n        description: `User's configuration email for ${config['email-preference']?.[application]?.title} application does not exist.`,\n      },\n    },\n  },\n});\n\nexport const saveEmailValues = ({\n  application,\n  values,\n  apiVersion,\n  resourceType = 'email-preference',\n  url,\n  apiName,\n}) => ({\n  type: ACTION_TYPES.SAVE_EMAIL_SCHEMA,\n  payload: save(apiName || application, values, apiVersion, resourceType, url),\n  meta: {\n    appName: application,\n    title: config['email-preference']?.[application]?.title,\n    noError: true,\n  },\n});\n","import React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport './descriptiveCheckbox.scss';\nimport {\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n} from '@patternfly/react-icons';\n\n// eslint-disable-next-line no-unused-vars\nconst DescriptiveCheckbox = (props) => {\n  const {\n    label,\n    title,\n    description,\n    isDanger,\n    checkedWarning,\n    infoMessage,\n    input: { onChange, checked, ...input },\n  } = useFieldApi({\n    ...props,\n    type: 'checkbox',\n  });\n\n  return (\n    <Checkbox\n      {...input}\n      isChecked={checked}\n      id={`descriptive-checkbox-${input.name}`}\n      onChange={(checked, event, ...rest) => {\n        onChange(checked, event, ...rest);\n      }}\n      data-type=\"descriptive-checkbox\"\n      className=\"pref-c-descriptive-checkbox\"\n      label={\n        <span\n          className={classNames('pref-c-checkbox-label', {\n            'pref-c-checkbox-label-error': isDanger,\n          })}\n        >\n          {label || title}\n        </span>\n      }\n      description={\n        <div>\n          {description && (\n            <>\n              <span className=\"pref-c-checkbox-description\">{description}</span>\n            </>\n          )}\n          {!checked && infoMessage && (\n            <span className=\"pref-c-checkbox-info\">\n              <InfoCircleIcon /> {infoMessage}\n            </span>\n          )}\n          {checked && checkedWarning && (\n            <span className=\"pref-c-checkbox-warning\">\n              <ExclamationTriangleIcon /> {checkedWarning}\n            </span>\n          )}\n        </div>\n      }\n    />\n  );\n};\n\nDescriptiveCheckbox.propTypes = {\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  group: PropTypes.string,\n  section: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  isDanger: PropTypes.bool,\n  isGlobal: PropTypes.bool,\n};\n\nDescriptiveCheckbox.defaultProps = {\n  name: '',\n  label: '',\n  isDanger: false,\n};\n\nexport default DescriptiveCheckbox;\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport PropTypes from 'prop-types';\n\nconst Loader = ({\n  name,\n  size,\n  FieldProvider,\n  validate,\n  FormSpyProvider,\n  formOptions,\n  ...rest\n}) => (\n  <div {...rest}>\n    <Skeleton size={size}></Skeleton>\n  </div>\n);\n\nLoader.propTypes = {\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n  validate: PropTypes.any,\n  name: PropTypes.string,\n  size: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  name: '',\n  size: 'md',\n};\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nclass DataListRow extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch(_error, info) {\n    this.setState({ hasError: info });\n  }\n\n  render() {\n    const { fieldsKey, label, fields, formOptions } = this.props;\n    const { hasError } = this.state;\n    return (\n      <DataListItemRow>\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell\n              isFilled={false}\n              className=\"pref-c-title pref-u-bold\"\n              key={`${fieldsKey}-title`}\n            >\n              {fieldsKey === 0 ? label : ''}\n            </DataListCell>,\n            <DataListCell isFilled key={`${fieldsKey}-content`}>\n              {hasError\n                ? 'Error while mapping fields, please check your schema if it has valid component types'\n                : formOptions?.renderForm(fields, formOptions)}\n            </DataListCell>,\n          ]}\n        />\n      </DataListItemRow>\n    );\n  }\n}\n\nDataListRow.propTypes = {\n  fieldsKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fields: PropTypes.array,\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  label: PropTypes.node,\n  name: PropTypes.string,\n  validate: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n};\n\n// eslint-disable-next-line no-unused-vars\nconst DataListLayout = (props) => {\n  const { sections, label, name } = useFieldApi(props);\n  const formOptions = useFormApi();\n  return (\n    <DataList aria-label={label || name} {...props}>\n      {sections.map(({ label, fields }, key) => {\n        const actualFields = Array.isArray(fields) ? fields : [fields];\n        return (\n          actualFields.length > 0 && (\n            <DataListItem name={name} key={key} aria-labelledby=\"simple-item1\">\n              {actualFields.map(({ fields: fieldsToRender }, fieldsKey) => (\n                <DataListRow\n                  key={`${key}-${fieldsKey}`}\n                  fieldsKey={fieldsKey}\n                  label={label}\n                  fields={fieldsToRender}\n                  formOptions={formOptions}\n                />\n              ))}\n            </DataListItem>\n          )\n        );\n      })}\n    </DataList>\n  );\n};\n\nDataListLayout.propTypes = {\n  sections: PropTypes.array,\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  label: PropTypes.node,\n  name: PropTypes.string,\n  validate: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n};\n\nexport default DataListLayout;\n","import React, { useEffect, useRef } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { BULK_SELECT_BUTTON } from '../../Utilities/constants';\nimport './BulkSelectButton.scss';\n\nconst BulkSelectButton = (props) => {\n  const formOptions = useFormApi();\n  const dirtyFieldsRef = useRef(formOptions.getState().dirtyFields);\n  const {\n    group,\n    section,\n    input: { ...input },\n  } = useFieldApi({\n    ...props,\n    type: 'button',\n  });\n  useEffect(() => {\n    if (\n      JSON.stringify(dirtyFieldsRef.current) !==\n      JSON.stringify(formOptions.getState().dirtyFields)\n    ) {\n      let notIsSubscribed;\n      formOptions.batch(() => {\n        formOptions.getRegisteredFields().forEach((field) => {\n          if (\n            !field.includes(BULK_SELECT_BUTTON) &&\n            ((field.includes(group) && field.includes(section)) ||\n              (field === 'is_subscribed' && // a temporary condition for RHEL Advisor email pref.\n                group === 'rhel' &&\n                section == 'advisor')) &&\n            formOptions.getFieldState(field).value == false\n          ) {\n            notIsSubscribed = true;\n          }\n        });\n      });\n      formOptions.change(input.name, notIsSubscribed ?? false);\n      dirtyFieldsRef.current = formOptions.getState().dirtyFields;\n    }\n  });\n\n  return (\n    <Button\n      className=\"pref-c-bulk-select-button\"\n      variant=\"secondary\"\n      {...input}\n      id={`button-${input.name}`}\n      onClick={() => {\n        formOptions.batch(() => {\n          formOptions.getRegisteredFields().forEach((field) => {\n            if (\n              ((field.includes(group) && field.includes(section)) ||\n                (field === 'is_subscribed' && // a temporary condition for RHEL Advisor email pref.\n                  group === 'rhel' &&\n                  section == 'advisor')) &&\n              !field.includes(BULK_SELECT_BUTTON)\n            ) {\n              formOptions.change(field, input.value);\n            }\n          });\n        });\n        formOptions.change(input.name, !input.value);\n      }}\n    >\n      {input.value == true ? 'Select all' : 'Deselect All'}\n    </Button>\n  );\n};\n\nBulkSelectButton.propTypes = {\n  group: PropTypes.string,\n  section: PropTypes.string,\n  name: PropTypes.string,\n};\n\nBulkSelectButton.defaultProps = {\n  name: '',\n};\n\nexport default BulkSelectButton;\n","export const DESCRIPTIVE_CHECKBOX = 'descriptiveCheckbox';\nexport const LOADER = 'loader';\nexport const DATA_LIST = 'section';\nexport const BUTTON = 'bulkSelectButton';\n","import { LOADER } from '../SmartComponents/FormComponents';\n\nexport const BULK_SELECT_BUTTON = 'BULK_SELECT_BUTTON';\n\nexport const loaderField = [{ fields: [{ component: LOADER }] }];\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { getEmailSchema } from '../redux/actions/email-actions';\nimport { loaderField } from './constants';\nimport config from '../config/config.json';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const getSchema = (app) =>\n  !app || !app.loaded ? loaderField : app.schema;\n\nconst withNegatedFunction = (booleanFunctions) => {\n  return {\n    ...booleanFunctions,\n    ...Object.fromEntries(\n      Object.keys(booleanFunctions).map((methodName) => [\n        `!${methodName}`,\n        (...args) => !booleanFunctions[methodName](...args),\n      ])\n    ),\n  };\n};\n\nexport const notificationConfigForBundle = (bundleName) =>\n  config['notification-preference']?.[bundleName];\n\nexport const useChromePush = () => {\n  const push = useChrome(({ chromeHistory: { push } = {} }) => push);\n  return (e, link) => {\n    if (typeof push === 'function') {\n      e.preventDefault();\n      push(link.replace(/^.\\//, '/'));\n    }\n  };\n};\n\nexport const visibilityFunctions = withNegatedFunction({\n  ...insights.chrome?.visibilityFunctions,\n  hasLoosePermissions: async (permissions = []) => {\n    const userPermissions = await insights.chrome.getUserPermissions();\n    return permissions.some((item) =>\n      userPermissions?.find(({ permission }) => permission === item)\n    );\n  },\n});\n\nexport const calculatePermissions = (permissions) =>\n  Promise.all(\n    [permissions]\n      .flat()\n      .map(({ method, args }) =>\n        visibilityFunctions?.[method]?.(...(args || []))\n      )\n  ).then((visibility) => visibility.every(Boolean));\n\nexport const calculateEmailConfig = (\n  { 'email-preference': config } = { 'email-preference': {} },\n  dispatch = () => {}\n) =>\n  Object.entries(config)\n    .map(\n      ([\n        key,\n        { permissions, url, apiName, apiVersion, localFile, ...rest },\n      ]) => {\n        const isVisible = permissions\n          ? calculatePermissions(permissions)\n          : true;\n        (async () => {\n          const schemaVisible = await Promise.resolve(isVisible);\n          if (schemaVisible) {\n            if (localFile) {\n              const newMapper = (await import(`../config/${localFile}`))\n                .default;\n              dispatch(getEmailSchema({ schema: newMapper, application: key }));\n            } else {\n              dispatch(\n                getEmailSchema({ application: key, url, apiName, apiVersion })\n              );\n            }\n          }\n        })();\n\n        return {\n          [key]: {\n            localFile,\n            isVisible,\n            url,\n            apiName,\n            apiVersion,\n            ...rest,\n          },\n        };\n      }\n    )\n    .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n\nexport const getSection = (\n  key,\n  schema = {},\n  storeSchema,\n  success = () => {}\n) => {\n  if (schema.isVisible === true) {\n    return {\n      label: schema?.title,\n      name: key,\n      fields: schema?.fields || getSchema(storeSchema),\n    };\n  } else {\n    Promise.resolve(schema.isVisible).then(success);\n\n    return {\n      label: <Skeleton />,\n      name: key,\n      fields: loaderField,\n    };\n  }\n};\n\nexport const concatApps = (apps = []) => {\n  return `${apps.slice(0, apps.length - (apps.length > 1)).join(', ')}${\n    apps.length >= 2 ? ` and ${apps[apps.length - 1]}` : ''\n  }`;\n};\n\nexport const distributeSuccessError = (promisses = []) => {\n  return Promise.allSettled(promisses.map(({ promise }) => promise)).then(\n    (apps) => {\n      return apps.reduce(\n        (acc, { value }, index) => ({\n          ...acc,\n          [value ? 'success' : 'error']: [\n            ...acc[value ? 'success' : 'error'],\n            promisses[index]?.meta?.title,\n          ],\n        }),\n        { success: [], error: [] }\n      );\n    }\n  );\n};\n\nexport const dispatchMessages = (\n  dispatch = () => undefined,\n  success = [],\n  error = []\n) => {\n  if (error.length !== 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: `Email preferences for ${concatApps(\n          success\n        )} successfully saved`,\n      })\n    );\n\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: `Email preferences for ${concatApps(\n          error\n        )} unsuccessfully saved`,\n      })\n    );\n  }\n\n  if (error.length === 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: 'Preferences successfully saved',\n      })\n    );\n  }\n\n  if (error.length !== 0 && success.length === 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: 'Preferences unsuccessfully saved',\n      })\n    );\n  }\n};\n","export const getNavFromURL = (history, fields, defaults) => {\n  const searchParams = new URLSearchParams(history?.location?.search);\n  const params = Object.fromEntries(searchParams);\n\n  if (\n    fields.some(\n      (bundle) =>\n        bundle.name === params.bundle &&\n        bundle.fields.some((app) => app.name === params.app)\n    )\n  ) {\n    return params;\n  } else {\n    if (defaults.bundle && defaults.app) {\n      searchParams.set('bundle', defaults.bundle);\n      searchParams.set('app', defaults.app);\n      history.replace({\n        pathname: history.location.pathname,\n        search: searchParams.toString(),\n      });\n    }\n    return { ...params, ...defaults };\n  }\n};\n\nexport const setNavToURL = (history, params) => {\n  let searchParams = new URLSearchParams(history?.location?.search);\n  Object.entries(params).forEach(([key, value]) => {\n    searchParams.set(key, value);\n  });\n\n  history.replace({\n    pathname: history.location.pathname,\n    search: searchParams.toString(),\n  });\n};\n","import React, { useMemo } from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  Divider,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Menu,\n  MenuContent,\n  MenuGroup,\n  MenuInput,\n  MenuItem,\n  MenuList,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getNavFromURL } from './urlSync';\n\nconst renderEmptyState = (setSearch) => (\n  <EmptyState variant={EmptyStateVariant.small} className=\"pf-u-mt-lg\">\n    <EmptyStateIcon icon={SearchIcon} />\n    <Title headingLevel=\"h4\" size=\"lg\">\n      No matching applications found\n    </Title>\n    <EmptyStateBody>Adjust you filters and try again.</EmptyStateBody>\n    <Button variant={ButtonVariant.link} onClick={() => setSearch('')}>\n      Clear filters\n    </Button>\n  </EmptyState>\n);\n\nconst TabsMenu = ({ searchRef, search, setSearch, fields, onClick }) => {\n  const history = useHistory();\n\n  const { bundle, app } = useMemo(\n    () => getNavFromURL(history, fields, {}),\n    [history?.location.search]\n  );\n\n  return (\n    <Menu isPlain isScrollable>\n      <MenuInput ref={searchRef} className=\"pf-u-mx-sm\">\n        <TextInput\n          aria-label=\"Filter menu items\"\n          placeholder=\"Search applications\"\n          iconVariant=\"search\"\n          type=\"search\"\n          onChange={(value) => setSearch(value)}\n          value={search}\n        />\n      </MenuInput>\n      <Divider />\n      <MenuContent id=\"notifications-menu-content\">\n        {fields.some((bundle) => bundle.fields.length > 0)\n          ? fields.map(({ fields, title, name: bundleName }) =>\n              fields.length > 0 ? (\n                <MenuGroup\n                  label={title}\n                  className=\"pf-u-px-sm\"\n                  key={`menu-group-${bundleName}`}\n                >\n                  <MenuList>\n                    {fields.map(({ label, name: sectionName }) => (\n                      <MenuItem\n                        onClick={(e) => onClick(e, bundleName, sectionName)}\n                        key={`menu-item-${bundleName}-${sectionName}`}\n                        isFocused={bundle === bundleName && app === sectionName}\n                      >\n                        {label}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </MenuGroup>\n              ) : null\n            )\n          : renderEmptyState(setSearch)}\n      </MenuContent>\n    </Menu>\n  );\n};\n\nTabsMenu.propTypes = {\n  fields: PropTypes.array.isRequired,\n  search: PropTypes.string,\n  setSearch: PropTypes.func,\n  searchRef: PropTypes.object,\n  onClick: PropTypes.func,\n};\n\nexport default TabsMenu;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport { Text, Title } from '@patternfly/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useFormState } from 'react-final-form';\nimport { getNavFromURL, setNavToURL } from './urlSync';\nimport TabsMenu from './TabsMenu';\nimport config from '../../config/config.json';\n\nconst renderPageHeading = (bundleTitle, sectionTitle) => (\n  <React.Fragment>\n    <Title headingLevel=\"h3\" size=\"xl\" className=\"pf-u-pb-xs\">\n      {`${sectionTitle} | ${bundleTitle}`}\n    </Title>\n    <Text className=\"pf-u-mb-xl\">\n      Configure your {sectionTitle} notifications.\n    </Text>\n  </React.Fragment>\n);\n\nconst FormTabs = ({ fields, titleRef }) => {\n  const history = useHistory();\n  const formOptions = useFormApi();\n  const searchRef = useRef(null);\n  const navConfig = useRef({});\n\n  const [search, setSearch] = useState('');\n  const [filteredFields, setFilteredFields] = useState(fields);\n  const { pristine, submitSucceeded, dirtyFieldsSinceLastSubmit } =\n    useFormState();\n\n  const handleResize = () => {\n    const container = document.getElementById('notifications-container');\n    const gridElement = document.getElementById('notifications-grid');\n    const menu = document.getElementById('notifications-menu-content');\n    if (menu?.style && gridElement?.style) {\n      const buttonsHeight =\n        document\n          .getElementById('user-pref__form-buttons')\n          ?.getBoundingClientRect()?.height || 0;\n      gridElement.style.height = `${\n        container.getBoundingClientRect().height - buttonsHeight\n      }px`;\n      const menuMaxHeight =\n        container.getBoundingClientRect().height -\n        titleRef.current.getBoundingClientRect().height -\n        searchRef.current.getBoundingClientRect().height -\n        (menuMaxHeight < menu.scrollHeight ? buttonsHeight : 0) -\n        1;\n      menu.style.maxHeight = `${menuMaxHeight}px`;\n      menu.style.height = `${menuMaxHeight - buttonsHeight}px`;\n    }\n  };\n\n  useEffect(() => {\n    if (window.screen.width > 768) {\n      window.addEventListener('resize', handleResize);\n      handleResize();\n    }\n\n    navConfig.current = getNavFromURL(history, fields, {\n      bundle: fields?.[0]?.name,\n      app: fields?.[0]?.fields?.[0]?.name,\n    });\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const filtered = fields.reduce(\n      (acc, bundle) => [\n        ...acc,\n        {\n          ...bundle,\n          fields: bundle.fields.filter((item) => {\n            const searchValue = search.toLowerCase();\n            return (\n              item.name?.toLowerCase().includes(searchValue) ||\n              item.title?.toLowerCase().includes(searchValue)\n            );\n          }, []),\n        },\n      ],\n      []\n    );\n    setFilteredFields(filtered);\n  }, [search]);\n\n  useEffect(() => {\n    handleResize();\n  }, [pristine, submitSucceeded, dirtyFieldsSinceLastSubmit]);\n\n  return (\n    <React.Fragment>\n      <div className=\"pref-notifications--nav\">\n        <TabsMenu\n          searchRef={searchRef}\n          search={search}\n          setSearch={setSearch}\n          fields={filteredFields}\n          onClick={(e, bundleName, sectionName) => {\n            e.preventDefault();\n            navConfig.current = {\n              bundle: bundleName,\n              app: sectionName,\n            };\n            setNavToURL(history, navConfig.current);\n          }}\n        />\n      </div>\n      <div className=\"pref-notifications--inputs\">\n        <React.Fragment>\n          {renderPageHeading(\n            config['notification-preference'][navConfig.current.bundle]?.title,\n            fields\n              .reduce((acc, curr) => [...acc, ...curr.fields], [])\n              .filter(\n                (item) =>\n                  item.name === navConfig.current.app &&\n                  item.bundle === navConfig.current.bundle\n              )?.[0]?.label\n          )}\n          <div>\n            {formOptions.renderForm(\n              fields.reduce(\n                (acc, curr) => [\n                  ...acc,\n                  ...curr.fields.map((item) => ({\n                    ...item,\n                    key: `form-${item.bundle}-${item.name}`,\n                    fields: [\n                      item.fields.map((input) => ({\n                        ...input,\n                        hideField: !(\n                          item.name === navConfig.current.app &&\n                          item.bundle === navConfig.current.bundle\n                        ),\n                      })),\n                    ],\n                  })),\n                ],\n                []\n              ),\n              formOptions\n            )}\n          </div>\n        </React.Fragment>\n      </div>\n    </React.Fragment>\n  );\n};\n\nFormTabs.propTypes = {\n  fields: PropTypes.array.isRequired,\n  dataType: PropTypes.any,\n  validate: PropTypes.any,\n  component: PropTypes.any,\n  titleRef: PropTypes.any,\n};\n\nexport default React.memo(FormTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\n\nconst FormTabGroup = ({ fields }) => {\n  const formOptions = useFormApi();\n\n  return (\n    <div className=\"pf-c-form\">\n      {formOptions.renderForm(fields, formOptions)}\n    </div>\n  );\n};\n\nFormTabGroup.propTypes = {\n  fields: PropTypes.array.isRequired,\n};\n\nexport default FormTabGroup;\n","import { BULK_SELECT_BUTTON } from '../../Utilities/constants';\nimport config from '../../config/config.json';\n\nexport const prepareFields = (notifPref, emailPref, emailConfig) =>\n  Object.entries(notifPref).reduce(\n    (acc, [key, value]) => [\n      ...acc,\n      {\n        title: config['notification-preference'][key].title,\n        name: key,\n        fields: value.sections.reduce((acc, section) => {\n          let unsubscribeAllInactive = true;\n          const fields = [\n            ...section.fields[0].fields.map((field) => {\n              unsubscribeAllInactive =\n                unsubscribeAllInactive && field.initialValue;\n              return {\n                ...field,\n                group: key,\n                section: section.name,\n                category: 'notification-preference',\n              };\n            }),\n            ...Object.entries(emailPref).reduce(\n              (acc, emailSection) => [\n                ...acc,\n                ...(emailSection[0] === section.name &&\n                emailConfig[emailSection[0]]?.bundle === key\n                  ? emailSection[1].schema[0]?.fields.map((field) => {\n                      unsubscribeAllInactive =\n                        unsubscribeAllInactive && field.initialValue;\n                      return {\n                        ...field,\n                        group: key,\n                        section: section.name,\n                        category: 'email-preference',\n                      };\n                    }) || []\n                  : []),\n              ],\n              []\n            ),\n          ];\n          return [\n            ...acc,\n            {\n              ...section,\n              bundle: key,\n              component: 'tabGroup',\n              fields: [\n                {\n                  name: `bundles[${key}].applications[${section.name}].notifications[${BULK_SELECT_BUTTON}]`,\n                  group: key,\n                  section: section.name,\n                  initialValue: !unsubscribeAllInactive,\n                  component: 'bulkSelectButton',\n                },\n                ...fields,\n              ],\n            },\n          ];\n        }, []),\n      },\n    ],\n    []\n  );\n","import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport { ActionGroup } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport './form-buttons.scss';\n\nconst FormButtons = ({\n  dirtyFieldsSinceLastSubmit,\n  submitSucceeded,\n  pristine,\n}) => {\n  const { reset } = useFormApi();\n  const noChanges =\n    isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  return noChanges ? null : (\n    <div\n      id=\"user-pref__form-buttons\"\n      className=\"pref-shared--buttons pf-m-9-col-on-md\"\n    >\n      <ActionGroup className=\"pref-shared--actions pf-u-px-lg pf-u-py-md\">\n        <Button\n          type=\"submit\"\n          ouiaId=\"user-pref__submit-button\"\n          isDisabled={noChanges}\n          variant=\"primary\"\n        >\n          Save\n        </Button>\n        <Button\n          variant=\"link\"\n          ouiaId=\"user-pref__reset-button\"\n          isDisabled={noChanges}\n          onClick={() => reset()}\n        >\n          Cancel\n        </Button>\n      </ActionGroup>\n    </div>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport PropTypes from 'prop-types';\nimport FormButtons from '../shared/FormButtons';\n\nconst NotificationsTemplate = ({ schema, formFields }) => {\n  const { handleSubmit } = useFormApi();\n\n  return (\n    <form onSubmit={handleSubmit} style={{ display: 'contents' }}>\n      {schema.title}\n      {formFields}\n      <FormButtons />\n    </form>\n  );\n};\n\nNotificationsTemplate.propTypes = {\n  schema: PropTypes.shape({\n    title: PropTypes.node,\n  }),\n  formFields: PropTypes.array,\n};\n\nexport default NotificationsTemplate;\n","import React, { useEffect, useRef, useState } from 'react';\nimport omit from 'lodash/omit';\nimport { FormRenderer } from '@data-driven-forms/react-form-renderer';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Text } from '@patternfly/react-core';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getNotificationSchemas,\n  saveNotificationValues,\n} from '../../redux/actions/notifications-actions';\nimport { saveEmailValues } from '../../redux/actions/email-actions';\nimport { getApplicationSchema } from '../../api';\nimport {\n  calculateEmailConfig,\n  notificationConfigForBundle,\n} from '../../Utilities/functions';\nimport {\n  BUTTON,\n  BulkSelectButton,\n  DATA_LIST,\n  DESCRIPTIVE_CHECKBOX,\n  DataListLayout,\n  DescriptiveCheckbox,\n  LOADER,\n  Loader,\n} from '../../SmartComponents/FormComponents';\nimport config from '../../config/config.json';\nimport FormTabs from './Tabs';\nimport FormTabGroup from './TabGroup';\nimport { prepareFields } from './utils';\nimport { BULK_SELECT_BUTTON } from '../../Utilities/constants';\nimport FormTemplate from './NotificationTemplate';\nimport './notifications.scss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst Notifications = () => {\n  const { auth } = useChrome();\n  const dispatch = useDispatch();\n  const titleRef = useRef(null);\n  const [isLoading, setLoading] = useState(false);\n  const [emailConfig, setEmailConfig] = useState({});\n\n  const emailPref = useSelector(({ emailReducer }) => emailReducer);\n  const { bundles: notifPref } = useSelector(({ notificationsReducer }) => ({\n    bundles: {},\n    ...notificationsReducer,\n  }));\n\n  useEffect(() => {\n    setLoading(true);\n    (async () => {\n      await auth.getUser();\n      setEmailConfig(await calculateEmailConfig(config, dispatch));\n      const promises = Object.keys(config['notification-preference']).map(\n        (bundleName) =>\n          getApplicationSchema(\n            notificationConfigForBundle(bundleName)?.application,\n            undefined,\n            notificationConfigForBundle(bundleName)?.resourceType\n          ).then((data) => ({\n            data,\n            bundleName,\n          }))\n      );\n      Promise.all(promises).then((values) => {\n        const newValues = values.reduce(\n          (acc, { data, bundleName }) => ({\n            ...acc,\n            [bundleName]: data?.fields[0],\n          }),\n          {}\n        );\n        dispatch(getNotificationSchemas(newValues));\n        setLoading(false);\n      });\n    })();\n  }, []);\n\n  const saveValues = (values, formApi) => {\n    const notifToSubmit = Object.entries(notifPref).reduce((acc, curr) => {\n      const temp = curr[1].sections\n        .filter((item) =>\n          Object.entries(formApi.getState().dirtyFields).some(\n            ([key, value]) =>\n              key.includes(curr[0]) &&\n              key.includes(item.name) &&\n              key.includes('notifications') &&\n              value\n          )\n        )\n        .map((item) => item.name);\n      const tempToSubmit = [...new Set([...(acc?.[curr[0]] || []), ...temp])];\n      return {\n        ...acc,\n        ...(tempToSubmit.length > 0 ? { [curr[0]]: tempToSubmit } : {}),\n      };\n    }, {});\n    const promises = Object.keys(notifToSubmit).map((bundleName) =>\n      dispatch(\n        saveNotificationValues({\n          bundleName,\n          values: {\n            bundles: {\n              [bundleName]: {\n                applications: Object.entries(\n                  values.bundles[bundleName].applications\n                ).reduce(\n                  (acc, [key, value]) => ({\n                    ...acc,\n                    [key]: {\n                      notifications: omit(\n                        value.notifications,\n                        BULK_SELECT_BUTTON\n                      ),\n                    },\n                  }),\n                  {}\n                ),\n              },\n            },\n          },\n        })\n      )\n    );\n    // temporary submitting of RHEL Advisor email pref.\n    if (formApi.getState().dirtyFields['is_subscribed']) {\n      const { url, apiName } = emailConfig['advisor'];\n      const action = saveEmailValues({\n        application: 'advisor',\n        values: { is_subscribed: values.is_subscribed },\n        url,\n        apiName,\n      });\n      promises.push(dispatch(action));\n    }\n    formApi.initialize(values);\n    Promise.all(promises)\n      .then(() => {\n        dispatch(\n          addNotification({\n            dismissable: true,\n            variant: 'success',\n            title: 'Notification preferences successfully saved',\n          })\n        );\n      })\n      .catch(() => {\n        dispatch(\n          addNotification({\n            dismissable: true,\n            variant: 'danger',\n            title: 'Notification preferences unsuccessfully saved',\n          })\n        );\n      });\n  };\n\n  return !isLoading ? (\n    <div id=\"notifications-container\" className=\"pref-notifications--container\">\n      <div className=\"pref-notifications--wrapper\">\n        <div id=\"notifications-grid\" className=\"pref-notifications--grid\">\n          <div ref={titleRef} className=\"pref-notifications--head\">\n            <PageHeaderTitle\n              className=\"pref-notifications--title sticky\"\n              title=\"My Notifications\"\n            />\n            <Text className=\"pref-notifications--subtitle\">\n              This service allows you to opt-in and out of receiving\n              notifications. Your Organization Administrator has configured\n              which notifications you can or can not receive in their{' '}\n              <a href={`/settings/notifications`}>Settings</a>.\n            </Text>\n          </div>\n\n          <FormRenderer\n            componentMapper={{\n              ...componentMapper,\n              [DESCRIPTIVE_CHECKBOX]: DescriptiveCheckbox,\n              [BUTTON]: BulkSelectButton,\n              [LOADER]: Loader,\n              [DATA_LIST]: DataListLayout,\n              tabs: FormTabs,\n              tabGroup: FormTabGroup,\n            }}\n            FormTemplate={FormTemplate}\n            schema={{\n              fields: [\n                {\n                  component: 'tabs',\n                  name: 'notifTabs',\n                  titleRef,\n                  fields: prepareFields(notifPref, emailPref, emailConfig),\n                },\n              ],\n            }}\n            onSubmit={saveValues}\n          />\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Notifications;\n","import { getApplicationSchema, saveValues as save } from '../../api';\nimport { ACTION_TYPES } from '../action-types';\nimport { notificationConfigForBundle } from '../../Utilities/functions';\n\nexport const getNotificationSchemas = (payload) => ({\n  type: ACTION_TYPES.GET_NOTIFICATION_SCHEMAS,\n  payload,\n});\n\nexport const getNotificationSchema = ({ bundleName, apiVersion }) => ({\n  type: ACTION_TYPES.GET_NOTIFICATION_SCHEMA,\n  payload: getApplicationSchema(\n    notificationConfigForBundle(bundleName)?.application,\n    apiVersion,\n    notificationConfigForBundle(bundleName)?.resourceType\n  ),\n  meta: {\n    bundleName,\n    notifications: {\n      rejected: {\n        variant: 'danger',\n        title: \"Request for user's configuration failed\",\n        description: `User's configuration notification for this bundle does not exist.`,\n      },\n    },\n  },\n});\n\nexport const saveNotificationValues = ({ bundleName, values, apiVersion }) => ({\n  type: ACTION_TYPES.SAVE_NOTIFICATION_SCHEMA,\n  payload: save(\n    notificationConfigForBundle(bundleName)?.application,\n    values,\n    apiVersion,\n    notificationConfigForBundle(bundleName)?.resourceType\n  ),\n  meta: {\n    bundleName: bundleName,\n    noError: true,\n  },\n});\n","var map = {\n\t\"./config.json\": [\n\t\t25091\n\t],\n\t\"./data/general.json\": [\n\t\t14298,\n\t\t298\n\t],\n\t\"./data/unsubscribe.json\": [\n\t\t17814,\n\t\t814\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 40118;\nmodule.exports = webpackAsyncContext;"],"names":["instance","response","config","data","JSON","parse","_e","getApplicationSchema","application","apiVersion","resourceType","url","saveValues","values","getEmailSchema","schema","apiName","type","ACTION_TYPES","payload","meta","appName","notifications","rejected","variant","title","description","DescriptiveCheckbox","props","useFieldApi","label","isDanger","checkedWarning","infoMessage","input","onChange","checked","Checkbox","isChecked","id","name","event","rest","className","classNames","InfoCircleIcon","ExclamationTriangleIcon","propTypes","FieldProvider","PropTypes","formOptions","group","section","isGlobal","defaultProps","Loader","size","validate","FormSpyProvider","DataListRow","hasError","_error","info","this","setState","fieldsKey","fields","state","DataListItemRow","DataListItemCells","dataListCells","DataListCell","isFilled","key","renderForm","Component","DataListLayout","sections","useFormApi","DataList","map","actualFields","Array","isArray","length","DataListItem","fieldsToRender","BulkSelectButton","dirtyFieldsRef","useRef","getState","dirtyFields","useEffect","notIsSubscribed","stringify","current","batch","getRegisteredFields","forEach","field","includes","BULK_SELECT_BUTTON","getFieldState","value","change","Button","onClick","booleanFunctions","notificationConfigForBundle","bundleName","visibilityFunctions","insights","chrome","hasLoosePermissions","permissions","getUserPermissions","userPermissions","some","item","find","permission","Object","fromEntries","keys","methodName","calculateEmailConfig","dispatch","entries","localFile","isVisible","Promise","all","flat","method","args","then","visibility","every","Boolean","calculatePermissions","resolve","newMapper","reduce","acc","curr","getNavFromURL","history","defaults","searchParams","URLSearchParams","location","search","params","bundle","app","set","replace","pathname","toString","TabsMenu","searchRef","setSearch","useHistory","useMemo","Menu","isPlain","isScrollable","MenuInput","ref","TextInput","placeholder","iconVariant","Divider","MenuContent","MenuGroup","MenuList","sectionName","MenuItem","e","isFocused","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","SearchIcon","Title","headingLevel","EmptyStateBody","ButtonVariant","renderEmptyState","FormTabs","bundleTitle","sectionTitle","titleRef","navConfig","useState","filteredFields","setFilteredFields","useFormState","pristine","submitSucceeded","dirtyFieldsSinceLastSubmit","handleResize","container","document","getElementById","gridElement","menu","style","buttonsHeight","getBoundingClientRect","height","menuMaxHeight","scrollHeight","maxHeight","window","screen","width","addEventListener","removeEventListener","filtered","filter","searchValue","toLowerCase","preventDefault","setNavToURL","Text","hideField","dataType","component","React","FormTabGroup","prepareFields","notifPref","emailPref","emailConfig","unsubscribeAllInactive","initialValue","category","emailSection","FormButtons","reset","noChanges","ActionGroup","ouiaId","isDisabled","formProps","subscription","NotificationsTemplate","formFields","handleSubmit","onSubmit","display","auth","useChrome","useDispatch","isLoading","setLoading","setEmailConfig","useSelector","emailReducer","bundles","notificationsReducer","getUser","promises","undefined","newValues","PageHeaderTitle","href","componentMapper","FormTemplate","formApi","notifToSubmit","temp","tempToSubmit","Set","save","noError","saveNotificationValues","applications","omit","action","saveEmailValues","is_subscribed","push","initialize","addNotification","dismissable","webpackAsyncContext","req","__webpack_require__","o","Error","code","ids","slice","t","module","exports"],"sourceRoot":""}