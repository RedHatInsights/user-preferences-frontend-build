{"version":3,"file":"js/Notifications.ddb62efdb0e02a2c57a4.js","mappings":"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","sources":["webpack:///./src/api.js","webpack:///./src/redux/actions/email-actions.js","webpack:///./src/SmartComponents/FormComponents/DescriptiveCheckbox.js","webpack:///./src/SmartComponents/FormComponents/Loader.js","webpack:///./src/SmartComponents/FormComponents/DataListLayout.js","webpack:///./src/SmartComponents/FormComponents/componentTypes.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/functions.js","webpack:///./src/PresentationalComponents/Notifications/urlSync.js","webpack:///./src/PresentationalComponents/Notifications/TabsMenu.js","webpack:///./src/PresentationalComponents/Notifications/Tabs.js","webpack:///./src/PresentationalComponents/Notifications/TabGroup.js","webpack:///./src/PresentationalComponents/Notifications/utils.js","webpack:///./src/PresentationalComponents/shared/FormButtons.js","webpack:///./src/PresentationalComponents/Notifications/NotificationTemplate.js","webpack:///./src/PresentationalComponents/Notifications/Notifications.js","webpack:///./src/redux/actions/notifications-actions.js","webpack:///./src/config/ lazy ^\\.\\/.*$ namespace object"],"sourcesContent":["import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport { instance };\n\ninstance.interceptors.response.use((response) => {\n  if (response?.config?.data) {\n    try {\n      return JSON.parse(response.config.data);\n    } catch (_e) {\n      return response.config.data;\n    }\n  }\n\n  return response;\n});\n\nexport const getApplicationSchema = (\n  application,\n  apiVersion = 'v1',\n  resourceType = '',\n  url\n) =>\n  instance.get(\n    `/api/${application}/${apiVersion}${url || `/user-config/${resourceType}`}`\n  );\n\nexport const saveValues = async (\n  application,\n  values,\n  apiVersion = 'v1',\n  resourceType = '',\n  url\n) =>\n  instance.post(\n    `/api/${application}/${apiVersion}${url || `/user-config/${resourceType}`}`,\n    values\n  );\n","import { getApplicationSchema, saveValues as save } from '../../api';\nimport { ACTION_TYPES } from '../action-types';\nimport config from '../../config/config.json';\n\nexport const getEmailSchema = ({\n  application,\n  apiVersion,\n  resourceType = 'email-preference',\n  schema,\n  url,\n  apiName,\n}) => ({\n  type: ACTION_TYPES.GET_EMAIL_SCHEMA,\n  payload:\n    schema ||\n    getApplicationSchema(apiName || application, apiVersion, resourceType, url),\n  meta: {\n    appName: application,\n    notifications: {\n      rejected: {\n        variant: 'danger',\n        title: \"Request for user's configuration failed\",\n        description: `User's configuration email for ${config['email-preference']?.[application]?.title} application does not exist.`,\n      },\n    },\n  },\n});\n\nexport const saveEmailValues = ({\n  application,\n  values,\n  apiVersion,\n  resourceType = 'email-preference',\n  url,\n  apiName,\n}) => ({\n  type: ACTION_TYPES.SAVE_EMAIL_SCHEMA,\n  payload: save(apiName || application, values, apiVersion, resourceType, url),\n  meta: {\n    appName: application,\n    title: config['email-preference']?.[application]?.title,\n    noError: true,\n  },\n});\n","import React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport './descriptiveCheckbox.scss';\nimport {\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n} from '@patternfly/react-icons';\n\n// eslint-disable-next-line no-unused-vars\nconst DescriptiveCheckbox = (props) => {\n  const {\n    group,\n    section,\n    label,\n    beforeOnChange,\n    title,\n    description,\n    isDanger,\n    isGlobal,\n    checkedWarning,\n    infoMessage,\n    input: { onChange, checked, ...input },\n  } = useFieldApi({\n    ...props,\n    type: 'checkbox',\n  });\n  const formOptions = useFormApi();\n\n  return (\n    <Checkbox\n      {...input}\n      isChecked={checked}\n      id={`descriptive-checkbox-${input.name}`}\n      onChange={(checked, event, ...rest) => {\n        beforeOnChange(\n          isGlobal,\n          checked,\n          formOptions,\n          group,\n          section,\n          props.name\n        );\n        onChange(checked, event, ...rest);\n      }}\n      data-type=\"descriptive-checkbox\"\n      className=\"pref-c-descriptive-checkbox\"\n      label={\n        <span\n          className={classNames('pref-c-checkbox-label', {\n            'pref-c-checkbox-label-error': isDanger || isGlobal,\n          })}\n        >\n          {label || title}\n        </span>\n      }\n      description={\n        <div>\n          {description && (\n            <>\n              <span className=\"pref-c-checkbox-description\">{description}</span>\n            </>\n          )}\n          {!checked && checkedWarning && (\n            <span className=\"pref-c-checkbox-info\">\n              <InfoCircleIcon /> {infoMessage}\n            </span>\n          )}\n          {checked && checkedWarning && (\n            <span className=\"pref-c-checkbox-warning\">\n              <ExclamationTriangleIcon /> {checkedWarning}\n            </span>\n          )}\n        </div>\n      }\n    />\n  );\n};\n\nDescriptiveCheckbox.propTypes = {\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  group: PropTypes.string,\n  section: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  isDanger: PropTypes.bool,\n  isGlobal: PropTypes.bool,\n};\n\nDescriptiveCheckbox.defaultProps = {\n  name: '',\n  label: '',\n  isDanger: false,\n};\n\nexport default DescriptiveCheckbox;\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport PropTypes from 'prop-types';\n\nconst Loader = ({\n  name,\n  size,\n  FieldProvider,\n  validate,\n  FormSpyProvider,\n  formOptions,\n  ...rest\n}) => (\n  <div {...rest}>\n    <Skeleton size={size}></Skeleton>\n  </div>\n);\n\nLoader.propTypes = {\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n  validate: PropTypes.any,\n  name: PropTypes.string,\n  size: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  name: '',\n  size: 'md',\n};\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nclass DataListRow extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch(_error, info) {\n    this.setState({ hasError: info });\n  }\n\n  render() {\n    const { fieldsKey, label, fields, formOptions } = this.props;\n    const { hasError } = this.state;\n    return (\n      <DataListItemRow>\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell\n              isFilled={false}\n              className=\"pref-c-title pref-u-bold\"\n              key={`${fieldsKey}-title`}\n            >\n              {fieldsKey === 0 ? label : ''}\n            </DataListCell>,\n            <DataListCell isFilled key={`${fieldsKey}-content`}>\n              {hasError\n                ? 'Error while mapping fields, please check your schema if it has valid component types'\n                : formOptions?.renderForm(fields, formOptions)}\n            </DataListCell>,\n          ]}\n        />\n      </DataListItemRow>\n    );\n  }\n}\n\nDataListRow.propTypes = {\n  fieldsKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fields: PropTypes.array,\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  label: PropTypes.node,\n  name: PropTypes.string,\n  validate: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n};\n\n// eslint-disable-next-line no-unused-vars\nconst DataListLayout = (props) => {\n  const { sections, label, name } = useFieldApi(props);\n  const formOptions = useFormApi();\n  return (\n    <DataList aria-label={label || name} {...props}>\n      {sections.map(({ label, fields }, key) => {\n        const actualFields = Array.isArray(fields) ? fields : [fields];\n        return (\n          actualFields.length > 0 && (\n            <DataListItem name={name} key={key} aria-labelledby=\"simple-item1\">\n              {actualFields.map(({ fields: fieldsToRender }, fieldsKey) => (\n                <DataListRow\n                  key={`${key}-${fieldsKey}`}\n                  fieldsKey={fieldsKey}\n                  label={label}\n                  fields={fieldsToRender}\n                  formOptions={formOptions}\n                />\n              ))}\n            </DataListItem>\n          )\n        );\n      })}\n    </DataList>\n  );\n};\n\nDataListLayout.propTypes = {\n  sections: PropTypes.array,\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  label: PropTypes.node,\n  name: PropTypes.string,\n  validate: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n};\n\nexport default DataListLayout;\n","export const DESCRIPTIVE_CHECKBOX = 'descriptiveCheckbox';\nexport const LOADER = 'loader';\nexport const DATA_LIST = 'section';\n","import { LOADER } from '../SmartComponents/FormComponents';\n\nexport const UNSUBSCRIBE_ALL = 'UNSUBSCRIBE_ALL';\n\nexport const loaderField = [{ fields: [{ component: LOADER }] }];\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { getEmailSchema } from '../redux/actions/email-actions';\nimport { loaderField } from './constants';\nimport config from '../config/config.json';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const getSchema = (app) =>\n  !app || !app.loaded ? loaderField : app.schema;\n\nconst withNegatedFunction = (booleanFunctions) => {\n  return {\n    ...booleanFunctions,\n    ...Object.fromEntries(\n      Object.keys(booleanFunctions).map((methodName) => [\n        `!${methodName}`,\n        (...args) => !booleanFunctions[methodName](...args),\n      ])\n    ),\n  };\n};\n\nexport const notificationConfigForBundle = (bundleName) =>\n  config['notification-preference']?.[bundleName];\n\nexport const useChromePush = () => {\n  const push = useChrome(({ chromeHistory: { push } = {} }) => push);\n  return (e, link) => {\n    if (typeof push === 'function') {\n      e.preventDefault();\n      push(link.replace(/^.\\//, '/'));\n    }\n  };\n};\n\nexport const visibilityFunctions = withNegatedFunction({\n  ...insights.chrome?.visibilityFunctions,\n  hasLoosePermissions: async (permissions = []) => {\n    const userPermissions = await insights.chrome.getUserPermissions();\n    return permissions.some((item) =>\n      userPermissions?.find(({ permission }) => permission === item)\n    );\n  },\n});\n\nexport const calculatePermissions = (permissions) =>\n  Promise.all(\n    [permissions]\n      .flat()\n      .map(({ method, args }) =>\n        visibilityFunctions?.[method]?.(...(args || []))\n      )\n  ).then((visibility) => visibility.every(Boolean));\n\nexport const calculateEmailConfig = (\n  { 'email-preference': config } = { 'email-preference': {} },\n  dispatch = () => {}\n) =>\n  Object.entries(config)\n    .map(\n      ([\n        key,\n        { permissions, url, apiName, apiVersion, localFile, ...rest },\n      ]) => {\n        const isVisible = permissions\n          ? calculatePermissions(permissions)\n          : true;\n        (async () => {\n          const schemaVisible = await Promise.resolve(isVisible);\n          if (schemaVisible) {\n            if (localFile) {\n              const newMapper = (await import(`../config/${localFile}`))\n                .default;\n              dispatch(getEmailSchema({ schema: newMapper, application: key }));\n            } else {\n              dispatch(\n                getEmailSchema({ application: key, url, apiName, apiVersion })\n              );\n            }\n          }\n        })();\n\n        return {\n          [key]: {\n            localFile,\n            isVisible,\n            url,\n            apiName,\n            apiVersion,\n            ...rest,\n          },\n        };\n      }\n    )\n    .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n\nexport const getSection = (\n  key,\n  schema = {},\n  storeSchema,\n  success = () => {}\n) => {\n  if (schema.isVisible === true) {\n    return {\n      label: schema?.title,\n      name: key,\n      fields: schema?.fields || getSchema(storeSchema),\n    };\n  } else {\n    Promise.resolve(schema.isVisible).then(success);\n\n    return {\n      label: <Skeleton />,\n      name: key,\n      fields: loaderField,\n    };\n  }\n};\n\nexport const concatApps = (apps = []) => {\n  return `${apps.slice(0, apps.length - (apps.length > 1)).join(', ')}${\n    apps.length >= 2 ? ` and ${apps[apps.length - 1]}` : ''\n  }`;\n};\n\nexport const distributeSuccessError = (promisses = []) => {\n  return Promise.allSettled(promisses.map(({ promise }) => promise)).then(\n    (apps) => {\n      return apps.reduce(\n        (acc, { value }, index) => ({\n          ...acc,\n          [value ? 'success' : 'error']: [\n            ...acc[value ? 'success' : 'error'],\n            promisses[index]?.meta?.title,\n          ],\n        }),\n        { success: [], error: [] }\n      );\n    }\n  );\n};\n\nexport const dispatchMessages = (\n  dispatch = () => undefined,\n  success = [],\n  error = []\n) => {\n  if (error.length !== 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: `Email preferences for ${concatApps(\n          success\n        )} successfully saved`,\n      })\n    );\n\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: `Email preferences for ${concatApps(\n          error\n        )} unsuccessfully saved`,\n      })\n    );\n  }\n\n  if (error.length === 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: 'Preferences successfully saved',\n      })\n    );\n  }\n\n  if (error.length !== 0 && success.length === 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: 'Preferences unsuccessfully saved',\n      })\n    );\n  }\n};\n","export const getNavFromURL = (history, fields, defaults) => {\n  const searchParams = new URLSearchParams(history?.location?.search);\n  const params = Object.fromEntries(searchParams);\n\n  if (\n    fields.some(\n      (bundle) =>\n        bundle.name === params.bundle &&\n        bundle.fields.some((app) => app.name === params.app)\n    )\n  ) {\n    return params;\n  } else {\n    if (defaults.bundle && defaults.app) {\n      searchParams.set('bundle', defaults.bundle);\n      searchParams.set('app', defaults.app);\n      history.replace({\n        pathname: history.location.pathname,\n        search: searchParams.toString(),\n      });\n    }\n    return { ...params, ...defaults };\n  }\n};\n\nexport const setNavToURL = (history, params) => {\n  let searchParams = new URLSearchParams(history?.location?.search);\n  Object.entries(params).forEach(([key, value]) => {\n    searchParams.set(key, value);\n  });\n\n  history.replace({\n    pathname: history.location.pathname,\n    search: searchParams.toString(),\n  });\n};\n","import React, { useMemo } from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  Divider,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Menu,\n  MenuContent,\n  MenuGroup,\n  MenuInput,\n  MenuItem,\n  MenuList,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getNavFromURL } from './urlSync';\n\nconst renderEmptyState = (setSearch) => (\n  <EmptyState variant={EmptyStateVariant.small} className=\"pf-u-mt-lg\">\n    <EmptyStateIcon icon={SearchIcon} />\n    <Title headingLevel=\"h4\" size=\"lg\">\n      No matching applications found\n    </Title>\n    <EmptyStateBody>Adjust you filters and try again.</EmptyStateBody>\n    <Button variant={ButtonVariant.link} onClick={() => setSearch('')}>\n      Clear filters\n    </Button>\n  </EmptyState>\n);\n\nconst TabsMenu = ({ searchRef, search, setSearch, fields, onClick }) => {\n  const history = useHistory();\n\n  const { bundle, app } = useMemo(\n    () => getNavFromURL(history, fields, {}),\n    [history?.location.search]\n  );\n\n  return (\n    <Menu isPlain isScrollable>\n      <MenuInput ref={searchRef} className=\"pf-u-mx-sm\">\n        <TextInput\n          aria-label=\"Filter menu items\"\n          placeholder=\"Search applications\"\n          iconVariant=\"search\"\n          type=\"search\"\n          onChange={(value) => setSearch(value)}\n          value={search}\n        />\n      </MenuInput>\n      <Divider />\n      <MenuContent id=\"notifications-menu-content\">\n        {fields.some((bundle) => bundle.fields.length > 0)\n          ? fields.map(({ fields, title, name: bundleName }) =>\n              fields.length > 0 ? (\n                <MenuGroup\n                  label={title}\n                  className=\"pf-u-px-sm\"\n                  key={`menu-group-${bundleName}`}\n                >\n                  <MenuList>\n                    {fields.map(({ label, name: sectionName }) => (\n                      <MenuItem\n                        onClick={(e) => onClick(e, bundleName, sectionName)}\n                        key={`menu-item-${bundleName}-${sectionName}`}\n                        isFocused={bundle === bundleName && app === sectionName}\n                      >\n                        {label}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </MenuGroup>\n              ) : null\n            )\n          : renderEmptyState(setSearch)}\n      </MenuContent>\n    </Menu>\n  );\n};\n\nTabsMenu.propTypes = {\n  fields: PropTypes.array.isRequired,\n  search: PropTypes.string,\n  setSearch: PropTypes.func,\n  searchRef: PropTypes.object,\n  onClick: PropTypes.func,\n};\n\nexport default TabsMenu;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport { Text, Title } from '@patternfly/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useFormState } from 'react-final-form';\nimport { getNavFromURL, setNavToURL } from './urlSync';\nimport TabsMenu from './TabsMenu';\nimport config from '../../config/config.json';\n\nconst renderPageHeading = (bundleTitle, sectionTitle) => (\n  <React.Fragment>\n    <Title headingLevel=\"h3\" size=\"xl\" className=\"pf-u-pb-xs\">\n      {`${sectionTitle} | ${bundleTitle}`}\n    </Title>\n    <Text className=\"pf-u-mb-xl\">\n      Configure your {sectionTitle} notifications.\n    </Text>\n  </React.Fragment>\n);\n\nconst FormTabs = ({ fields, titleRef }) => {\n  const history = useHistory();\n  const formOptions = useFormApi();\n  const searchRef = useRef(null);\n  const navConfig = useRef({});\n\n  const [search, setSearch] = useState('');\n  const [filteredFields, setFilteredFields] = useState(fields);\n  const { pristine, submitSucceeded, dirtyFieldsSinceLastSubmit } =\n    useFormState();\n\n  const handleResize = () => {\n    const container = document.getElementById('notifications-container');\n    const gridElement = document.getElementById('notifications-grid');\n    const menu = document.getElementById('notifications-menu-content');\n    if (menu?.style && gridElement?.style) {\n      const buttonsHeight =\n        document\n          .getElementById('user-pref__form-buttons')\n          ?.getBoundingClientRect()?.height || 0;\n      gridElement.style.height = `${\n        container.getBoundingClientRect().height - buttonsHeight\n      }px`;\n      const menuMaxHeight =\n        container.getBoundingClientRect().height -\n        titleRef.current.getBoundingClientRect().height -\n        searchRef.current.getBoundingClientRect().height -\n        (menuMaxHeight < menu.scrollHeight ? buttonsHeight : 0) -\n        1;\n      menu.style.maxHeight = `${menuMaxHeight}px`;\n      menu.style.height = `${menuMaxHeight - buttonsHeight}px`;\n    }\n  };\n\n  useEffect(() => {\n    if (window.screen.width > 768) {\n      window.addEventListener('resize', handleResize);\n      handleResize();\n    }\n\n    navConfig.current = getNavFromURL(history, fields, {\n      bundle: fields?.[0]?.name,\n      app: fields?.[0]?.fields?.[0]?.name,\n    });\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const filtered = fields.reduce(\n      (acc, bundle) => [\n        ...acc,\n        {\n          ...bundle,\n          fields: bundle.fields.filter((item) => {\n            const searchValue = search.toLowerCase();\n            return (\n              item.name?.toLowerCase().includes(searchValue) ||\n              item.title?.toLowerCase().includes(searchValue)\n            );\n          }, []),\n        },\n      ],\n      []\n    );\n    setFilteredFields(filtered);\n  }, [search]);\n\n  useEffect(() => {\n    handleResize();\n  }, [pristine, submitSucceeded, dirtyFieldsSinceLastSubmit]);\n\n  return (\n    <React.Fragment>\n      <div className=\"pref-notifications--nav\">\n        <TabsMenu\n          searchRef={searchRef}\n          search={search}\n          setSearch={setSearch}\n          fields={filteredFields}\n          onClick={(e, bundleName, sectionName) => {\n            e.preventDefault();\n            navConfig.current = {\n              bundle: bundleName,\n              app: sectionName,\n            };\n            setNavToURL(history, navConfig.current);\n          }}\n        />\n      </div>\n      <div className=\"pref-notifications--inputs\">\n        <React.Fragment>\n          {renderPageHeading(\n            config['notification-preference'][navConfig.current.bundle]?.title,\n            fields\n              .reduce((acc, curr) => [...acc, ...curr.fields], [])\n              .filter(\n                (item) =>\n                  item.name === navConfig.current.app &&\n                  item.bundle === navConfig.current.bundle\n              )?.[0]?.label\n          )}\n          <div>\n            {formOptions.renderForm(\n              fields.reduce(\n                (acc, curr) => [\n                  ...acc,\n                  ...curr.fields.map((item) => ({\n                    ...item,\n                    key: `form-${item.bundle}-${item.name}`,\n                    fields: [\n                      item.fields.map((input) => ({\n                        ...input,\n                        hideField: !(\n                          item.name === navConfig.current.app &&\n                          item.bundle === navConfig.current.bundle\n                        ),\n                      })),\n                    ],\n                  })),\n                ],\n                []\n              ),\n              formOptions\n            )}\n          </div>\n        </React.Fragment>\n      </div>\n    </React.Fragment>\n  );\n};\n\nFormTabs.propTypes = {\n  fields: PropTypes.array.isRequired,\n  dataType: PropTypes.any,\n  validate: PropTypes.any,\n  component: PropTypes.any,\n  titleRef: PropTypes.any,\n};\n\nexport default React.memo(FormTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\n\nconst FormTabGroup = ({ fields }) => {\n  const formOptions = useFormApi();\n\n  return (\n    <div className=\"pf-c-form\">\n      {formOptions.renderForm(fields, formOptions)}\n    </div>\n  );\n};\n\nFormTabGroup.propTypes = {\n  fields: PropTypes.array.isRequired,\n};\n\nexport default FormTabGroup;\n","import { UNSUBSCRIBE_ALL } from '../../Utilities/constants';\nimport config from '../../config/config.json';\n\nexport const prepareFields = (notifPref, emailPref, emailConfig) =>\n  Object.entries(notifPref).reduce(\n    (acc, [key, value]) => [\n      ...acc,\n      {\n        title: config['notification-preference'][key].title,\n        name: key,\n        fields: value.sections.reduce((acc, section) => {\n          let unsubscribeAllInactive = false;\n          const fields = [\n            ...section.fields[0].fields.map((field) => {\n              unsubscribeAllInactive =\n                unsubscribeAllInactive || field.initialValue;\n              return {\n                ...field,\n                group: key,\n                section: section.name,\n                category: 'notification-preference',\n                beforeOnChange: beforeCheckboxOnChange,\n              };\n            }),\n            ...Object.entries(emailPref).reduce(\n              (acc, emailSection) => [\n                ...acc,\n                ...(emailSection[0] === section.name &&\n                emailConfig[emailSection[0]]?.bundle === key\n                  ? emailSection[1].schema[0]?.fields.map((field) => {\n                      unsubscribeAllInactive =\n                        unsubscribeAllInactive || field.initialValue;\n                      return {\n                        ...field,\n                        group: key,\n                        section: section.name,\n                        category: 'email-preference',\n                        beforeOnChange: beforeCheckboxOnChange,\n                      };\n                    }) || []\n                  : []),\n              ],\n              []\n            ),\n          ];\n          return [\n            ...acc,\n            {\n              ...section,\n              bundle: key,\n              component: 'tabGroup',\n              fields: [\n                ...fields,\n                {\n                  name: `bundles[${key}].applications[${section.name}].notifications[${UNSUBSCRIBE_ALL}]`,\n                  label: 'Unsubscribe from all',\n                  isGlobal: true,\n                  initialValue: !unsubscribeAllInactive,\n                  group: key,\n                  section: section.name,\n                  component: 'descriptiveCheckbox',\n                  validate: [],\n                  category: 'notification-preference',\n                  beforeOnChange: beforeCheckboxOnChange,\n                },\n              ],\n            },\n          ];\n        }, []),\n      },\n    ],\n    []\n  );\n\nexport const beforeCheckboxOnChange = (\n  isGlobal,\n  checked,\n  formOptions,\n  group,\n  section,\n  fieldName\n) => {\n  if (isGlobal) {\n    formOptions.batch(() => {\n      formOptions.getRegisteredFields().forEach((field) => {\n        if (\n          checked &&\n          typeof formOptions.getFieldState(field).value === 'boolean' &&\n          ((field.includes(group) && field.includes(section)) ||\n            (field === 'is_subscribed' && // a temporary condition for RHEL Advisor email pref.\n              group === 'rhel' &&\n              section == 'advisor')) &&\n          !field.includes(UNSUBSCRIBE_ALL)\n        ) {\n          formOptions.change(field, false);\n        }\n      });\n    });\n  } else if (checked) {\n    const foundUnsubscribe = formOptions\n      .getRegisteredFields()\n      .find(\n        (field) =>\n          typeof formOptions.getFieldState(field).value === 'boolean' &&\n          field.includes(group) &&\n          field.includes(section) &&\n          field.includes(UNSUBSCRIBE_ALL)\n      );\n    foundUnsubscribe && formOptions.change(foundUnsubscribe, false);\n  } else {\n    let unsubscribeAllInactive = true;\n    let foundUnsubscribe;\n    formOptions.batch(() => {\n      formOptions.getRegisteredFields().forEach((field) => {\n        if (\n          typeof formOptions.getFieldState(field).value === 'boolean' &&\n          ((field.includes(group) && field.includes(section)) ||\n            (field === 'is_subscribed' && // a temporary condition for RHEL Advisor email pref.\n              group === 'rhel' &&\n              section == 'advisor'))\n        ) {\n          if (field.includes(UNSUBSCRIBE_ALL)) {\n            foundUnsubscribe = field;\n          } else if (\n            formOptions.getFieldState(field).value &&\n            field !== fieldName\n          ) {\n            unsubscribeAllInactive = false;\n          }\n        }\n      });\n    });\n    foundUnsubscribe &&\n      formOptions.change(foundUnsubscribe, unsubscribeAllInactive);\n  }\n};\n","import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport { ActionGroup } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport './form-buttons.scss';\n\nconst FormButtons = ({\n  dirtyFieldsSinceLastSubmit,\n  submitSucceeded,\n  pristine,\n}) => {\n  const { reset } = useFormApi();\n  const noChanges =\n    isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  return noChanges ? null : (\n    <div\n      id=\"user-pref__form-buttons\"\n      className=\"pref-shared--buttons pf-m-9-col-on-md\"\n    >\n      <ActionGroup className=\"pref-shared--actions pf-u-px-lg pf-u-py-md\">\n        <Button\n          type=\"submit\"\n          ouiaId=\"user-pref__submit-button\"\n          isDisabled={noChanges}\n          variant=\"primary\"\n        >\n          Save\n        </Button>\n        <Button\n          variant=\"link\"\n          ouiaId=\"user-pref__reset-button\"\n          isDisabled={noChanges}\n          onClick={() => reset()}\n        >\n          Cancel\n        </Button>\n      </ActionGroup>\n    </div>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport PropTypes from 'prop-types';\nimport FormButtons from '../shared/FormButtons';\n\nconst NotificationsTemplate = ({ schema, formFields }) => {\n  const { handleSubmit } = useFormApi();\n\n  return (\n    <form onSubmit={handleSubmit} style={{ display: 'contents' }}>\n      {schema.title}\n      {formFields}\n      <FormButtons />\n    </form>\n  );\n};\n\nNotificationsTemplate.propTypes = {\n  schema: PropTypes.shape({\n    title: PropTypes.node,\n  }),\n  formFields: PropTypes.array,\n};\n\nexport default NotificationsTemplate;\n","import React, { useEffect, useRef, useState } from 'react';\nimport omit from 'lodash/omit';\nimport { FormRenderer } from '@data-driven-forms/react-form-renderer';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Text } from '@patternfly/react-core';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getNotificationSchemas,\n  saveNotificationValues,\n} from '../../redux/actions/notifications-actions';\nimport { saveEmailValues } from '../../redux/actions/email-actions';\nimport { getApplicationSchema } from '../../api';\nimport {\n  calculateEmailConfig,\n  notificationConfigForBundle,\n} from '../../Utilities/functions';\nimport {\n  DATA_LIST,\n  DESCRIPTIVE_CHECKBOX,\n  DataListLayout,\n  DescriptiveCheckbox,\n  LOADER,\n  Loader,\n} from '../../SmartComponents/FormComponents';\nimport config from '../../config/config.json';\nimport FormTabs from './Tabs';\nimport FormTabGroup from './TabGroup';\nimport { prepareFields } from './utils';\nimport { UNSUBSCRIBE_ALL } from '../../Utilities/constants';\nimport FormTemplate from './NotificationTemplate';\nimport './notifications.scss';\n\nconst Notifications = () => {\n  const dispatch = useDispatch();\n  const titleRef = useRef(null);\n  const [isLoading, setLoading] = useState(false);\n  const [emailConfig, setEmailConfig] = useState({});\n\n  const emailPref = useSelector(({ emailReducer }) => emailReducer);\n  const { bundles: notifPref } = useSelector(({ notificationsReducer }) => ({\n    bundles: {},\n    ...notificationsReducer,\n  }));\n\n  useEffect(() => {\n    setLoading(true);\n    (async () => {\n      await insights.chrome.auth.getUser();\n      setEmailConfig(await calculateEmailConfig(config, dispatch));\n      const promises = Object.keys(config['notification-preference']).map(\n        (bundleName) =>\n          getApplicationSchema(\n            notificationConfigForBundle(bundleName)?.application,\n            undefined,\n            notificationConfigForBundle(bundleName)?.resourceType\n          ).then((data) => ({\n            data,\n            bundleName,\n          }))\n      );\n      Promise.all(promises).then((values) => {\n        const newValues = values.reduce(\n          (acc, { data, bundleName }) => ({\n            ...acc,\n            [bundleName]: data?.fields[0],\n          }),\n          {}\n        );\n        dispatch(getNotificationSchemas(newValues));\n        setLoading(false);\n      });\n    })();\n  }, []);\n\n  const saveValues = (values, form) => {\n    const notifToSubmit = Object.entries(notifPref).reduce((acc, curr) => {\n      const temp = curr[1].sections\n        .filter((item) =>\n          Object.entries(form.getState().dirtyFields).some(\n            ([key, value]) =>\n              key.includes(curr[0]) &&\n              key.includes(item.name) &&\n              key.includes('notifications') &&\n              value\n          )\n        )\n        .map((item) => item.name);\n      const tempToSubmit = [...new Set([...(acc?.[curr[0]] || []), ...temp])];\n      return {\n        ...acc,\n        ...(tempToSubmit.length > 0 ? { [curr[0]]: tempToSubmit } : {}),\n      };\n    }, {});\n    const promises = Object.keys(notifToSubmit).map((bundleName) =>\n      dispatch(\n        saveNotificationValues({\n          bundleName,\n          values: {\n            bundles: {\n              [bundleName]: {\n                applications: Object.entries(\n                  values.bundles[bundleName].applications\n                ).reduce(\n                  (acc, [key, value]) => ({\n                    ...acc,\n                    [key]: {\n                      notifications: omit(value.notifications, UNSUBSCRIBE_ALL),\n                    },\n                  }),\n                  {}\n                ),\n              },\n            },\n          },\n        })\n      )\n    );\n    // temporary submitting of RHEL Advisor email pref.\n    if (form.getState().dirtyFields['is_subscribed']) {\n      const { url, apiName } = emailConfig['advisor'];\n      const action = saveEmailValues({\n        application: 'advisor',\n        values: { is_subscribed: values.is_subscribed },\n        url,\n        apiName,\n      });\n      promises.push(dispatch(action));\n    }\n    Promise.all(promises)\n      .then(() => {\n        dispatch(\n          addNotification({\n            dismissable: true,\n            variant: 'success',\n            title: 'Notification preferences successfully saved',\n          })\n        );\n      })\n      .catch(() => {\n        dispatch(\n          addNotification({\n            dismissable: true,\n            variant: 'danger',\n            title: 'Notification preferences unsuccessfully saved',\n          })\n        );\n      });\n  };\n\n  return !isLoading ? (\n    <div id=\"notifications-container\" className=\"pref-notifications--container\">\n      <div className=\"pref-notifications--wrapper\">\n        <div id=\"notifications-grid\" className=\"pref-notifications--grid\">\n          <div ref={titleRef} className=\"pref-notifications--head\">\n            <PageHeaderTitle\n              className=\"pref-notifications--title sticky\"\n              title=\"My Notifications\"\n            />\n            <Text className=\"pref-notifications--subtitle\">\n              This service allows you to opt-in and out of receiving\n              notifications. Your Organization Administrator has configured\n              which notifications you can or can not receive in their{' '}\n              <a href={`/settings/notifications`}>Settings</a>.\n            </Text>\n          </div>\n\n          <FormRenderer\n            componentMapper={{\n              ...componentMapper,\n              [DESCRIPTIVE_CHECKBOX]: DescriptiveCheckbox,\n              [LOADER]: Loader,\n              [DATA_LIST]: DataListLayout,\n              tabs: FormTabs,\n              tabGroup: FormTabGroup,\n            }}\n            FormTemplate={FormTemplate}\n            schema={{\n              fields: [\n                {\n                  component: 'tabs',\n                  name: 'notifTabs',\n                  titleRef,\n                  fields: prepareFields(notifPref, emailPref, emailConfig),\n                },\n              ],\n            }}\n            onSubmit={saveValues}\n          />\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Notifications;\n","import { getApplicationSchema, saveValues as save } from '../../api';\nimport { ACTION_TYPES } from '../action-types';\nimport { notificationConfigForBundle } from '../../Utilities/functions';\n\nexport const getNotificationSchemas = (payload) => ({\n  type: ACTION_TYPES.GET_NOTIFICATION_SCHEMAS,\n  payload,\n});\n\nexport const getNotificationSchema = ({ bundleName, apiVersion }) => ({\n  type: ACTION_TYPES.GET_NOTIFICATION_SCHEMA,\n  payload: getApplicationSchema(\n    notificationConfigForBundle(bundleName)?.application,\n    apiVersion,\n    notificationConfigForBundle(bundleName)?.resourceType\n  ),\n  meta: {\n    bundleName,\n    notifications: {\n      rejected: {\n        variant: 'danger',\n        title: \"Request for user's configuration failed\",\n        description: `User's configuration notification for this bundle does not exist.`,\n      },\n    },\n  },\n});\n\nexport const saveNotificationValues = ({ bundleName, values, apiVersion }) => ({\n  type: ACTION_TYPES.SAVE_NOTIFICATION_SCHEMA,\n  payload: save(\n    notificationConfigForBundle(bundleName)?.application,\n    values,\n    apiVersion,\n    notificationConfigForBundle(bundleName)?.resourceType\n  ),\n  meta: {\n    bundleName: bundleName,\n    noError: true,\n  },\n});\n","var map = {\n\t\"./config.json\": [\n\t\t25091\n\t],\n\t\"./data/general.json\": [\n\t\t14298,\n\t\t298\n\t],\n\t\"./data/unsubscribe.json\": [\n\t\t17814,\n\t\t814\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 40118;\nmodule.exports = webpackAsyncContext;"],"names":["instance","response","config","data","JSON","parse","_e","getApplicationSchema","application","apiVersion","resourceType","url","saveValues","values","getEmailSchema","schema","apiName","type","ACTION_TYPES","payload","meta","appName","notifications","rejected","variant","title","description","DescriptiveCheckbox","props","useFieldApi","group","section","label","beforeOnChange","isDanger","isGlobal","checkedWarning","infoMessage","input","onChange","checked","formOptions","useFormApi","Checkbox","isChecked","id","name","event","rest","className","classNames","InfoCircleIcon","ExclamationTriangleIcon","propTypes","FieldProvider","PropTypes","defaultProps","Loader","size","validate","FormSpyProvider","DataListRow","hasError","_error","info","this","setState","fieldsKey","fields","state","DataListItemRow","DataListItemCells","dataListCells","DataListCell","isFilled","key","renderForm","Component","DataListLayout","sections","DataList","map","actualFields","Array","isArray","length","DataListItem","fieldsToRender","UNSUBSCRIBE_ALL","booleanFunctions","notificationConfigForBundle","bundleName","visibilityFunctions","insights","chrome","hasLoosePermissions","permissions","getUserPermissions","userPermissions","some","item","find","permission","Object","fromEntries","keys","methodName","calculatePermissions","Promise","all","flat","method","args","then","visibility","every","Boolean","calculateEmailConfig","dispatch","entries","localFile","isVisible","resolve","newMapper","reduce","acc","curr","getNavFromURL","history","defaults","searchParams","URLSearchParams","location","search","params","bundle","app","set","replace","pathname","toString","TabsMenu","searchRef","setSearch","onClick","useHistory","useMemo","Menu","isPlain","isScrollable","MenuInput","ref","TextInput","placeholder","iconVariant","value","Divider","MenuContent","MenuGroup","MenuList","sectionName","MenuItem","e","isFocused","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","SearchIcon","Title","headingLevel","EmptyStateBody","Button","ButtonVariant","renderEmptyState","FormTabs","bundleTitle","sectionTitle","titleRef","useRef","navConfig","useState","filteredFields","setFilteredFields","useFormState","pristine","submitSucceeded","dirtyFieldsSinceLastSubmit","handleResize","container","document","getElementById","gridElement","menu","style","buttonsHeight","getBoundingClientRect","height","menuMaxHeight","current","scrollHeight","maxHeight","useEffect","window","screen","width","addEventListener","removeEventListener","filtered","filter","searchValue","toLowerCase","includes","preventDefault","forEach","setNavToURL","Text","hideField","dataType","component","React","FormTabGroup","prepareFields","notifPref","emailPref","emailConfig","unsubscribeAllInactive","field","initialValue","category","beforeCheckboxOnChange","emailSection","fieldName","batch","getRegisteredFields","getFieldState","change","foundUnsubscribe","FormButtons","reset","noChanges","ActionGroup","ouiaId","isDisabled","formProps","subscription","NotificationsTemplate","formFields","handleSubmit","onSubmit","display","useDispatch","isLoading","setLoading","setEmailConfig","useSelector","emailReducer","bundles","notificationsReducer","auth","getUser","promises","undefined","newValues","PageHeaderTitle","href","componentMapper","FormTemplate","form","notifToSubmit","temp","getState","dirtyFields","tempToSubmit","Set","save","noError","saveNotificationValues","applications","omit","action","saveEmailValues","is_subscribed","push","addNotification","dismissable","webpackAsyncContext","req","__webpack_require__","o","Error","code","ids","slice","t","module","exports"],"sourceRoot":""}