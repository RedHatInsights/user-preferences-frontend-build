{"version":3,"file":"js/818.07e275f33a65e7fb7bff.js","mappings":"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","sources":["webpack:///./node_modules/@remix-run/router/dist/router.js","webpack:///./node_modules/react-router/dist/index.js","webpack:///./node_modules/react-router-dom/dist/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.13.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = safelyDecodeURIComponent(value || \"\", paramName);\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches) {\n  // Use the full pathname for the leaf match so we include splat values for \".\" links\n  return getPathContributingMatches(matches).map((match, idx) => idx === matches.length - 1 ? match.pathname : match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else if (isPathRelative) {\n    let fromSegments = routePathnames[routePathnames.length - 1].replace(/^\\//, \"\").split(\"/\");\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      // With relative=\"path\", each leading .. segment means \"go up one URL segment\"\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        fromSegments.pop();\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = \"/\" + fromSegments.join(\"/\");\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      // With relative=\"route\" (the default), each leading .. segment means\n      // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n      // difference from how <a href> works and a major reason we call this a\n      // \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized =\n  // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && (\n  // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      unstable_viewTransitionOpts: opts.viewTransitionOpts,\n      unstable_flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, flushSync, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, flushSync, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, flushSync, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, flushSync, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        updateFetcherState(key, getLoadingFetcher(submission));\n        return startRedirectNavigation(state, actionResult, {\n          fetcherSubmission: submission\n        });\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename);\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true\n    });\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse = {\n        type: resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result\n      };\n      throw queryRouteResponse;\n    }\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || obj.type === ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.20.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.20.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_flushSync: flushSync,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))))), null);\n}\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        unstable_flushSync: options.unstable_flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_flushSync: options.unstable_flushSync,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  let [fetcherKey, setFetcherKey] = React.useState(key || \"\");\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n"],"names":["Action","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","PopStateEventType","createMemoryHistory","options","entries","initialEntries","initialIndex","v5Compat","map","entry","index","createMemoryLocation","state","undefined","clampIndex","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","getUrlBasedHistory","window","globalHistory","usr","createHashHistory","substr","startsWith","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","invariant","value","message","Error","cond","console","warn","e","getHistoryState","idx","current","random","toString","_ref","parsedPath","searchIndex","getLocation","validateLocation","defaultView","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","DOMException","name","ResultType","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","convertRouteMatchToUiMatch","match","loaderData","params","data","handle","parentsMeta","flattenRoute","relativePath","caseSensitive","joinPaths","concat","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","pathnameBase","normalizePathname","generatePath","originalPath","prefix","p","String","array","keyMatch","optional","param","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","fromSegments","toSegments","shift","routePathnameIndex","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","DeferredData","constructor","reject","pendingKeysSet","subscribers","deferredKeys","Array","isArray","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref2","trackPromise","done","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","undefinedError","emit","settledKey","subscriber","subscribe","cancel","abort","v","k","async","resolve","size","unwrappedData","_ref3","unwrapTrackedPromise","pendingKeys","_tracked","isTrackedPromise","_error","_data","defer","redirect","redirectDocument","response","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_fetcherPersist","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","errors","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","deletedFetchers","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","opts","completedFetchers","deletedFetchersKeys","fetcher","unstable_viewTransitionOpts","viewTransitionOpts","unstable_flushSync","flushSync","deleteFetcher","completeNavigation","_temp","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","priorPaths","currentLocation","toPaths","getSavedScrollPosition","startNavigation","startUninterruptedRevalidation","getScrollKey","saveScrollPosition","enableViewTransition","routesToUse","loadingNavigation","overrideNavigation","notFoundMatches","cancelActiveDeferreds","submission","pendingActionData","pendingError","request","createClientSideRequest","findNearestBoundary","actionOutput","interruptActiveLoads","getSubmittingNavigation","actionMatch","getTargetMatch","callLoaderOrAction","shortCircuited","type","method","routeId","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","pendingActionError","isDeferredResult","handleAction","getLoadingNavigation","Request","fetcherSubmission","activeSubmission","getSubmissionFromNavigation","matchesToLoad","revalidatingFetchers","getMatchesToLoad","updatedFetchers","markFetchRedirectsDone","rf","revalidatingFetcher","getLoadingFetcher","abortFetcher","abortPendingFetchRevalidations","f","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","fetcherKey","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","handleLoaders","_temp2","revalidate","redirectLocation","isDocumentReload","reloadDocument","redirectHistoryAction","currentMatches","fetchersToLoad","all","resolveDeferredResults","updateFetcherState","setFetcherError","getFetcher","markFetchersDone","doneFetcher","getDoneFetcher","doneKeys","landedId","yeetedKeys","deleteBlocker","updateBlocker","newBlocker","blocker","shouldBlockNavigation","blockerKey","blockerFunction","predicate","cancelledRouteIds","dfd","y","initialize","_window","transitions","sessionPositions","sessionStorage","getItem","parse","restoreAppliedTransitions","_saveAppliedTransitions","setItem","persistAppliedTransitions","enableScrollRestoration","positions","getPosition","getKey","navigate","normalizedPath","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","userReplace","unstable_viewTransition","fetch","requestMatches","existingFetcher","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","revalidationRequest","loadId","loadFetcher","staleKey","handleFetcherAction","resolveDeferredData","handleFetcherLoader","count","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","body","isSubmissionNavigation","searchParams","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","convertFormDataToSearchParams","convertSearchParamsToFormData","append","values","currentUrl","nextUrl","boundaryId","navigationMatches","boundaryMatches","findIndex","getLoaderMatchesUntilBoundary","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","resultType","onReject","runHandler","handler","context","requestContext","handlerError","isStaticRequest","protocol","isSameBasename","isRouteRequest","contentType","statusCode","_result$init","_result$init2","deferred","resolveData","isDeferredData","foundError","loaderHeaders","processRouteLoaderData","newLoaderData","mergedLoaderData","reverse","find","_temp5","errorMessage","signals","isRevalidatingLoader","unwrap","getAll","pathMatches","Symbol","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","navigator","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","routePathnamesJson","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","props","super","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","Component","element","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","UseBlocker","setBlockerKey","startTransitionImpl","MemoryRouter","historyRef","setStateImpl","v7_startTransition","setState","Router","Navigate","_ref4","jsonPath","Outlet","Route","_props","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","Await","_ref7","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","pending","renderError","success","_ref8","toRender","renderMatches","updates","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","_excluded","_excluded2","_excluded3","createBrowserRouter","parseHydrationData","createHashRouter","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","__subType","ErrorConstructor","ViewTransitionContext","isTransitioning","FetchersContext","flushSyncImpl","flushSyncSafe","Deferred","reason","fallbackElement","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","optInStartTransition","startTransitionSafe","isViewTransitionUnavailable","startViewTransition","skipTransition","t","finished","finally","renderPromise","BrowserRouter","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","ariaCurrentProp","className","classNameProp","styleProp","routerState","useViewTransitionState","nextLocationPathname","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Form","_ref9","forwardedRef","onSubmit","submit","useSubmit","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","storageKey","useScrollRestoration","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","fetcherId","getUniqueFetcherId","UseSubmit","currentRouteId","validateClientSideSubmission","attr","isButtonElement","isInputElement","form","isFormDataSubmitterSupported","getFormSubmissionInfo","useFetcher","_temp3","_route$matches","UseFetcher","setFetcherKey","load","submitImpl","FetcherForm","useFetchers","UseFetchers","_ref11","SCROLL_RESTORATION_STORAGE_KEY","_temp4","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","getKeyWithoutBasename","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","_ref12","when","confirm","setTimeout","nextPath"],"sourceRoot":""}