{"version":3,"file":"js/Email.7c8cbec36ca92e674e9a.js","mappings":"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","sources":["webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/functions.js","webpack:///./src/PresentationalComponents/shared/useLoaded.js","webpack:///./src/PresentationalComponents/shared/YourInformation.js","webpack:///./src/PresentationalComponents/shared/useCurrentUser.js","webpack:///./src/PresentationalComponents/Email/Email.js","webpack:///./src/config|lazy|/^\\.\\/.*$/|groupOptions: {}|namespace object"],"sourcesContent":["import { LOADER } from '../SmartComponents/FormComponents';\n\nexport const loaderField = [{ fields: [{ component: LOADER }] }];\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { getEmailSchema } from '../actions';\nimport { loaderField } from './constants';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const getSchema = (app) =>\n  !app || !app.loaded ? loaderField : app.schema;\n\nconst withNegatedFunction = (booleanFunctions) => {\n  return {\n    ...booleanFunctions,\n    ...Object.fromEntries(\n      Object.keys(booleanFunctions).map((methodName) => [\n        `!${methodName}`,\n        (...args) => !booleanFunctions[methodName](...args),\n      ])\n    ),\n  };\n};\n\nexport const visibilityFunctions = withNegatedFunction({\n  ...insights.chrome?.visibilityFunctions,\n  hasLoosePermissions: async (permissions = []) => {\n    const userPermissions = await insights.chrome.getUserPermissions();\n    return permissions.some((item) =>\n      userPermissions?.find(({ permission }) => permission === item)\n    );\n  },\n});\n\nexport const calculatePermissions = (permissions) =>\n  Promise.all(\n    [permissions]\n      .flat()\n      .map(({ method, args }) =>\n        visibilityFunctions?.[method]?.(...(args || []))\n      )\n  ).then((visibility) => visibility.every(Boolean));\n\nexport const calculateEmailConfig = (\n  { 'email-preference': config } = { 'email-preference': {} },\n  dispatch = () => {}\n) =>\n  Object.entries(config)\n    .map(\n      ([\n        key,\n        { permissions, url, apiName, apiVersion, localFile, ...rest },\n      ]) => {\n        const isVisible = permissions\n          ? calculatePermissions(permissions)\n          : true;\n        (async () => {\n          const schemaVisible = await Promise.resolve(isVisible);\n          if (schemaVisible) {\n            if (localFile) {\n              const newMapper = (await import(`../config/${localFile}`))\n                .default;\n              dispatch(getEmailSchema({ schema: newMapper, application: key }));\n            } else {\n              dispatch(\n                getEmailSchema({ application: key, url, apiName, apiVersion })\n              );\n            }\n          }\n        })();\n\n        return {\n          [key]: {\n            localFile,\n            isVisible,\n            url,\n            apiName,\n            apiVersion,\n            ...rest,\n          },\n        };\n      }\n    )\n    .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n\nexport const getSection = (\n  key,\n  schema = {},\n  storeSchema,\n  success = () => {}\n) => {\n  if (schema.isVisible === true) {\n    return {\n      label: schema?.title,\n      name: key,\n      fields: schema?.fields || getSchema(storeSchema),\n    };\n  } else {\n    Promise.resolve(schema.isVisible).then(success);\n\n    return {\n      label: <Skeleton />,\n      name: key,\n      fields: loaderField,\n    };\n  }\n};\n\nexport const concatApps = (apps = []) => {\n  return `${apps.slice(0, apps.length - (apps.length > 1)).join(', ')}${\n    apps.length >= 2 ? ` and ${apps[apps.length - 1]}` : ''\n  }`;\n};\n\nexport const distributeSuccessError = (promisses = []) => {\n  return Promise.allSettled(promisses.map(({ promise }) => promise)).then(\n    (apps) => {\n      return apps.reduce(\n        (acc, { value }, index) => ({\n          ...acc,\n          [value ? 'success' : 'error']: [\n            ...acc[value ? 'success' : 'error'],\n            promisses[index]?.meta?.title,\n          ],\n        }),\n        { success: [], error: [] }\n      );\n    }\n  );\n};\n\nexport const dispatchMessages = (\n  dispatch = () => undefined,\n  success = [],\n  error = []\n) => {\n  if (error.length !== 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: `Email preferences for ${concatApps(\n          success\n        )} successfully saved`,\n      })\n    );\n\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: `Email preferences for ${concatApps(\n          error\n        )} unsuccessfully saved`,\n      })\n    );\n  }\n\n  if (error.length === 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: 'Preferences successfully saved',\n      })\n    );\n  }\n\n  if (error.length !== 0 && success.length === 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: 'Preferences unsuccessfully saved',\n      })\n    );\n  }\n};\n","import { useEffect, useState } from 'react';\n\nconst useLoaded = (loader) => {\n  const [isLoaded, setLoaded] = useState(false);\n  useEffect(() => {\n    (async () => {\n      await loader();\n      setLoaded(true);\n    })();\n  }, []);\n\n  return isLoaded;\n};\n\nexport default useLoaded;\n","import {\n  Card,\n  CardBody,\n  CardHeader,\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React, { Fragment } from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport useCurrentUser from './useCurrentUser';\n\nconst YourInformation = () => {\n  const env = insights.chrome.getEnvironment();\n  const prefix = insights.chrome.isProd ? '' : `${env === 'ci' ? 'qa' : env}.`;\n\n  const { isLoaded, currentUser } = useCurrentUser();\n\n  return (\n    <Card className=\"pref-email__info\" ouiaId=\"user-pref-info-card\">\n      <CardHeader>\n        <TextContent>\n          <Text component={TextVariants.h2}>Your information</Text>\n        </TextContent>\n      </CardHeader>\n      <CardBody>\n        <DataList>\n          <DataListItem>\n            <DataListItemRow>\n              <DataListItemCells\n                className=\"pref-u-condensed\"\n                dataListCells={[\n                  <DataListCell\n                    isFilled={false}\n                    className=\"pref-c-title pref-u-bold pref-u-condensed\"\n                    key=\"email-title\"\n                  >\n                    Email address\n                  </DataListCell>,\n                  <DataListCell\n                    isFilled\n                    key=\"email-value\"\n                    className=\"pref-email__info-user-email pref-u-condensed\"\n                  >\n                    {isLoaded ? (\n                      <Fragment>\n                        <span className=\"pf-u-mr-md\">{currentUser.email}</span>\n                        <a\n                          rel=\"noopener noreferrer\"\n                          target=\"_blank\"\n                          href={`https://www.${prefix}redhat.com/wapps/ugc/protected/emailChange.html`}\n                        >\n                          Not correct?\n                        </a>\n                      </Fragment>\n                    ) : (\n                      <Skeleton size=\"lg\" />\n                    )}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n          </DataListItem>\n        </DataList>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default YourInformation;\n","import { useState } from 'react';\nimport useLoaded from './useLoaded';\n\nconst useCurrentUser = () => {\n  const [currentUser, setCurrentUser] = useState({});\n\n  const isLoaded = useLoaded(async () => {\n    const { identity } = await insights.chrome.auth.getUser();\n    setCurrentUser(identity.user);\n  });\n\n  return {\n    isLoaded,\n    currentUser,\n  };\n};\n\nexport default useCurrentUser;\n","import React, { useState } from 'react';\nimport './email.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  componentMapper,\n  FormTemplate,\n} from '@data-driven-forms/pf4-component-mapper';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Card,\n  CardBody,\n  Stack,\n  StackItem,\n  CardHeader,\n  TextContent,\n  Text,\n  TextVariants,\n  Spinner,\n  Bullseye,\n} from '@patternfly/react-core';\nimport FormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport {\n  DESCRIPTIVE_CHECKBOX,\n  DATA_LIST,\n  LOADER,\n  DescriptiveCheckbox,\n  DataListLayout,\n  Loader,\n} from '../../SmartComponents/FormComponents';\nimport config from '../../config/config.json';\nimport { saveEmailValues } from '../../actions';\nimport {\n  calculateEmailConfig,\n  getSection,\n  distributeSuccessError,\n  dispatchMessages,\n} from '../../Utilities/functions';\nimport FormButtons from '../shared/FormButtons';\nimport YourInformation from '../shared/YourInformation';\nimport useLoaded from '../shared/useLoaded';\nimport { emailPreferences, register } from '../../store';\n\nconst Email = () => {\n  const dispatch = useDispatch();\n\n  const [emailConfig, setEmailConfig] = useState({});\n  const isLoaded = useLoaded(async () => {\n    await insights.chrome.auth.getUser();\n    register(emailPreferences);\n    setEmailConfig(await calculateEmailConfig(config, dispatch));\n  });\n\n  const store = useSelector(({ emailPreferences }) => emailPreferences);\n\n  const saveValues = async ({ unsubscribe, ...values }) => {\n    const promises = Object.entries(emailConfig)\n      .filter(([, { isVisible }]) => isVisible === true)\n      .map(([application, { localFile, schema, url, apiName }]) => {\n        if (\n          !localFile &&\n          !schema &&\n          store?.[application]?.schema &&\n          Object.keys(store?.[application]?.schema).length > 0\n        ) {\n          const action = saveEmailValues({ application, values, url, apiName });\n          dispatch(action);\n\n          return {\n            promise: action.payload,\n            meta: action.meta,\n          };\n        }\n      })\n      .filter(Boolean);\n\n    const { success, error } = await distributeSuccessError(promises);\n    dispatchMessages(dispatch, success, error);\n  };\n\n  const calculateSection = (key, schema) => {\n    return getSection(key, schema, store?.[key], (isVisible) => {\n      const { ...config } = emailConfig;\n      if (isVisible === false) {\n        delete config[key];\n      } else {\n        config[key] = {\n          ...config[key],\n          isVisible,\n        };\n      }\n\n      setEmailConfig(config);\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Email preferences\" />\n      </PageHeader>\n      <Main className=\"pref-email\">\n        <Stack hasGutter>\n          <StackItem>\n            <YourInformation />\n          </StackItem>\n          <StackItem>\n            <Card ouiaId=\"user-pref-email-subscriptions-card\">\n              <CardHeader className=\"pf-u-pb-0\">\n                <TextContent>\n                  <Text component={TextVariants.h2}>Email subscriptions</Text>\n                  <Text component={TextVariants.p}>\n                    Select the emails you want to receive.\n                  </Text>\n                </TextContent>\n              </CardHeader>\n              <CardBody className=\"pref-email_form\">\n                {isLoaded ? (\n                  <FormRender\n                    componentMapper={{\n                      ...componentMapper,\n                      [DESCRIPTIVE_CHECKBOX]: DescriptiveCheckbox,\n                      [LOADER]: Loader,\n                      [DATA_LIST]: DataListLayout,\n                    }}\n                    FormTemplate={(props) => (\n                      <FormTemplate {...props} FormButtons={FormButtons} />\n                    )}\n                    schema={{\n                      fields: [\n                        {\n                          name: 'email-preferences',\n                          component: DATA_LIST,\n                          sections: Object.entries(emailConfig).map(\n                            ([key, schema]) => calculateSection(key, schema)\n                          ),\n                        },\n                      ],\n                    }}\n                    onSubmit={saveValues}\n                  />\n                ) : (\n                  <Bullseye>\n                    <Spinner />\n                  </Bullseye>\n                )}\n              </CardBody>\n            </Card>\n          </StackItem>\n        </Stack>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default Email;\n","var map = {\n\t\"./config.json\": [\n\t\t25091\n\t],\n\t\"./data/general.json\": [\n\t\t14298,\n\t\t298\n\t],\n\t\"./data/unsubscribe.json\": [\n\t\t17814,\n\t\t814\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 40118;\nmodule.exports = webpackAsyncContext;"],"names":["loaderField","fields","component","LOADER","booleanFunctions","getSchema","app","loaded","schema","visibilityFunctions","insights","chrome","hasLoosePermissions","permissions","getUserPermissions","userPermissions","some","item","find","permission","Object","fromEntries","keys","map","methodName","calculatePermissions","Promise","all","flat","method","args","then","visibility","every","Boolean","calculateEmailConfig","config","dispatch","entries","key","url","apiName","apiVersion","localFile","rest","isVisible","resolve","newMapper","getEmailSchema","application","reduce","acc","curr","concatApps","apps","slice","length","join","distributeSuccessError","promisses","allSettled","promise","index","value","meta","title","success","error","dispatchMessages","addNotification","dismissable","variant","loader","useState","isLoaded","setLoaded","useEffect","env","getEnvironment","prefix","isProd","currentUser","setCurrentUser","useLoaded","auth","getUser","identity","user","useCurrentUser","Card","className","ouiaId","CardHeader","TextContent","Text","TextVariants","CardBody","DataList","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","isFilled","Fragment","email","rel","target","href","Skeleton","size","useDispatch","emailConfig","setEmailConfig","register","emailPreferences","store","useSelector","saveValues","unsubscribe","values","promises","filter","action","saveEmailValues","payload","PageHeader","PageHeaderTitle","Main","Stack","hasGutter","StackItem","componentMapper","DESCRIPTIVE_CHECKBOX","DescriptiveCheckbox","Loader","DATA_LIST","DataListLayout","FormTemplate","props","FormButtons","name","sections","storeSchema","label","getSection","calculateSection","onSubmit","Bullseye","Spinner","webpackAsyncContext","req","__webpack_require__","o","e","Error","code","ids","id","t","module","exports"],"sourceRoot":""}