{"version":3,"file":"js/109.1662470946654.c30a53902fbb8bdcec6a.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/shared/FormButtons.js","webpack:///./src/SmartComponents/FormComponents/DescriptiveCheckbox.js","webpack:///./src/SmartComponents/FormComponents/Loader.js","webpack:///./src/SmartComponents/FormComponents/DataListLayout.js","webpack:///./src/SmartComponents/FormComponents/componentTypes.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/functions.js","webpack:///./src/api.js","webpack:///./src/actions.js","webpack:///./src/config|lazy|/^\\.\\/.*$/|groupOptions: {}|namespace object"],"sourcesContent":["import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport { ActionGroup } from '@patternfly/react-core';\n\nconst FormButtons = ({\n  dirtyFieldsSinceLastSubmit,\n  submitSucceeded,\n  pristine,\n}) => {\n  const { reset } = useFormApi();\n  const noChanges =\n    isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  return (\n    <ActionGroup>\n      <Button\n        className=\"pref-email__form-button\"\n        type=\"submit\"\n        ouiaId=\"user-pref-primary-button\"\n        isDisabled={noChanges}\n        variant=\"primary\"\n      >\n        Save\n      </Button>\n      <Button\n        variant=\"link\"\n        ouiaId=\"user-pref-reset-button\"\n        isDisabled={noChanges}\n        onClick={() => reset()}\n      >\n        Cancel\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.arrayOf(\n    PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.bool,\n      ]),\n    })\n  ),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport './descriptiveCheckbox.scss';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\n// eslint-disable-next-line no-unused-vars\nconst DescriptiveCheckbox = (props) => {\n  const {\n    label,\n    title,\n    description,\n    isDanger,\n    isGlobal,\n    checkedWarning,\n    input: { onChange, checked, ...input },\n  } = useFieldApi({\n    ...props,\n    type: 'checkbox',\n  });\n  const formOptions = useFormApi();\n\n  return (\n    <Checkbox\n      {...input}\n      isChecked={checked}\n      id={`descriptive-checkbox-${input.name}`}\n      onChange={(...props) => {\n        if (isGlobal) {\n          formOptions.batch(() => {\n            formOptions.getRegisteredFields().forEach((field) => {\n              if (typeof formOptions.getFieldState(field).value === 'boolean') {\n                formOptions.change(field, false);\n              }\n            });\n          });\n        } else {\n          formOptions.change('unsubscribe.from-all', false);\n        }\n\n        onChange(...props);\n      }}\n      data-type=\"descriptive-checkbox\"\n      className=\"pref-c-descriptive-checkbox\"\n      label={\n        <span\n          className={classNames('pref-c-checkbox-label', {\n            'pref-c-checkbox-label-error': isDanger || isGlobal,\n          })}\n        >\n          {label || title}\n        </span>\n      }\n      description={\n        <div>\n          {description && (\n            <span className=\"pref-c-checkbox-description\">{description}</span>\n          )}\n          {checked && checkedWarning && (\n            <span className=\"pref-c-checkbox-warning\">\n              <ExclamationTriangleIcon /> {checkedWarning}\n            </span>\n          )}\n        </div>\n      }\n    />\n  );\n};\n\nDescriptiveCheckbox.propTypes = {\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  isDanger: PropTypes.bool,\n  isGlobal: PropTypes.bool,\n};\n\nDescriptiveCheckbox.defaultProps = {\n  name: '',\n  label: '',\n  isDanger: false,\n};\n\nexport default DescriptiveCheckbox;\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport PropTypes from 'prop-types';\n\nconst Loader = ({\n  name,\n  size,\n  FieldProvider,\n  validate,\n  FormSpyProvider,\n  formOptions,\n  ...rest\n}) => (\n  <div {...rest}>\n    <Skeleton size={size}></Skeleton>\n  </div>\n);\n\nLoader.propTypes = {\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n  validate: PropTypes.any,\n  name: PropTypes.string,\n  size: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  name: '',\n  size: 'md',\n};\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nclass DataListRow extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch(_error, info) {\n    this.setState({ hasError: info });\n  }\n\n  render() {\n    const { fieldsKey, label, fields, formOptions } = this.props;\n    const { hasError } = this.state;\n    return (\n      <DataListItemRow>\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell\n              isFilled={false}\n              className=\"pref-c-title pref-u-bold\"\n              key={`${fieldsKey}-title`}\n            >\n              {fieldsKey === 0 ? label : ''}\n            </DataListCell>,\n            <DataListCell isFilled key={`${fieldsKey}-content`}>\n              {hasError\n                ? 'Error while mapping fields, please check your schema if it has valid component types'\n                : formOptions?.renderForm(fields, formOptions)}\n            </DataListCell>,\n          ]}\n        />\n      </DataListItemRow>\n    );\n  }\n}\n\nDataListRow.propTypes = {\n  fieldsKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fields: PropTypes.array,\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  label: PropTypes.node,\n  name: PropTypes.string,\n  validate: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n};\n\n// eslint-disable-next-line no-unused-vars\nconst DataListLayout = (props) => {\n  const { sections, label, name } = useFieldApi(props);\n  const formOptions = useFormApi();\n  return (\n    <DataList aria-label={label || name} {...props}>\n      {sections.map(({ label, fields }, key) => {\n        const actualFields = Array.isArray(fields) ? fields : [fields];\n        return (\n          actualFields.length > 0 && (\n            <DataListItem name={name} key={key} aria-labelledby=\"simple-item1\">\n              {actualFields.map(({ fields: fieldsToRender }, fieldsKey) => (\n                <DataListRow\n                  key={`${key}-${fieldsKey}`}\n                  fieldsKey={fieldsKey}\n                  label={label}\n                  fields={fieldsToRender}\n                  formOptions={formOptions}\n                />\n              ))}\n            </DataListItem>\n          )\n        );\n      })}\n    </DataList>\n  );\n};\n\nDataListLayout.propTypes = {\n  sections: PropTypes.array,\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  label: PropTypes.node,\n  name: PropTypes.string,\n  validate: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n};\n\nexport default DataListLayout;\n","export const DESCRIPTIVE_CHECKBOX = 'descriptiveCheckbox';\nexport const LOADER = 'loader';\nexport const DATA_LIST = 'section';\n","import { LOADER } from '../SmartComponents/FormComponents';\n\nexport const loaderField = [{ fields: [{ component: LOADER }] }];\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { getEmailSchema } from '../actions';\nimport { loaderField } from './constants';\nimport config from '../config/config.json';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const getSchema = (app) =>\n  !app || !app.loaded ? loaderField : app.schema;\n\nconst withNegatedFunction = (booleanFunctions) => {\n  return {\n    ...booleanFunctions,\n    ...Object.fromEntries(\n      Object.keys(booleanFunctions).map((methodName) => [\n        `!${methodName}`,\n        (...args) => !booleanFunctions[methodName](...args),\n      ])\n    ),\n  };\n};\n\nexport const notificationConfigForBundle = (bundleName) =>\n  config['notification-preference']?.[bundleName];\n\nexport const useChromePush = () => {\n  const push = useChrome(({ chromeHistory: { push } = {} }) => push);\n  return (e, link) => {\n    if (typeof push === 'function') {\n      e.preventDefault();\n      push(link.replace(/^.\\//, '/'));\n    }\n  };\n};\n\nexport const visibilityFunctions = withNegatedFunction({\n  ...insights.chrome?.visibilityFunctions,\n  hasLoosePermissions: async (permissions = []) => {\n    const userPermissions = await insights.chrome.getUserPermissions();\n    return permissions.some((item) =>\n      userPermissions?.find(({ permission }) => permission === item)\n    );\n  },\n});\n\nexport const calculatePermissions = (permissions) =>\n  Promise.all(\n    [permissions]\n      .flat()\n      .map(({ method, args }) =>\n        visibilityFunctions?.[method]?.(...(args || []))\n      )\n  ).then((visibility) => visibility.every(Boolean));\n\nexport const calculateEmailConfig = (\n  { 'email-preference': config } = { 'email-preference': {} },\n  dispatch = () => {}\n) =>\n  Object.entries(config)\n    .map(\n      ([\n        key,\n        { permissions, url, apiName, apiVersion, localFile, ...rest },\n      ]) => {\n        const isVisible = permissions\n          ? calculatePermissions(permissions)\n          : true;\n        (async () => {\n          const schemaVisible = await Promise.resolve(isVisible);\n          if (schemaVisible) {\n            if (localFile) {\n              const newMapper = (await import(`../config/${localFile}`))\n                .default;\n              dispatch(getEmailSchema({ schema: newMapper, application: key }));\n            } else {\n              dispatch(\n                getEmailSchema({ application: key, url, apiName, apiVersion })\n              );\n            }\n          }\n        })();\n\n        return {\n          [key]: {\n            localFile,\n            isVisible,\n            url,\n            apiName,\n            apiVersion,\n            ...rest,\n          },\n        };\n      }\n    )\n    .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n\nexport const getSection = (\n  key,\n  schema = {},\n  storeSchema,\n  success = () => {}\n) => {\n  if (schema.isVisible === true) {\n    return {\n      label: schema?.title,\n      name: key,\n      fields: schema?.fields || getSchema(storeSchema),\n    };\n  } else {\n    Promise.resolve(schema.isVisible).then(success);\n\n    return {\n      label: <Skeleton />,\n      name: key,\n      fields: loaderField,\n    };\n  }\n};\n\nexport const concatApps = (apps = []) => {\n  return `${apps.slice(0, apps.length - (apps.length > 1)).join(', ')}${\n    apps.length >= 2 ? ` and ${apps[apps.length - 1]}` : ''\n  }`;\n};\n\nexport const distributeSuccessError = (promisses = []) => {\n  return Promise.allSettled(promisses.map(({ promise }) => promise)).then(\n    (apps) => {\n      return apps.reduce(\n        (acc, { value }, index) => ({\n          ...acc,\n          [value ? 'success' : 'error']: [\n            ...acc[value ? 'success' : 'error'],\n            promisses[index]?.meta?.title,\n          ],\n        }),\n        { success: [], error: [] }\n      );\n    }\n  );\n};\n\nexport const dispatchMessages = (\n  dispatch = () => undefined,\n  success = [],\n  error = []\n) => {\n  if (error.length !== 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: `Email preferences for ${concatApps(\n          success\n        )} successfully saved`,\n      })\n    );\n\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: `Email preferences for ${concatApps(\n          error\n        )} unsuccessfully saved`,\n      })\n    );\n  }\n\n  if (error.length === 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: 'Preferences successfully saved',\n      })\n    );\n  }\n\n  if (error.length !== 0 && success.length === 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: 'Preferences unsuccessfully saved',\n      })\n    );\n  }\n};\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport { instance };\n\ninstance.interceptors.response.use((response) => {\n  if (response?.config?.data) {\n    try {\n      return JSON.parse(response.config.data);\n    } catch (_e) {\n      return response.config.data;\n    }\n  }\n\n  return response;\n});\n\nexport const getApplicationSchema = (\n  application,\n  apiVersion = 'v1',\n  resourceType = '',\n  url\n) =>\n  instance.get(\n    `/api/${application}/${apiVersion}${url || `/user-config/${resourceType}`}`\n  );\n\nexport const saveValues = async (\n  application,\n  values,\n  apiVersion = 'v1',\n  resourceType = '',\n  url\n) =>\n  instance.post(\n    `/api/${application}/${apiVersion}${url || `/user-config/${resourceType}`}`,\n    values\n  );\n","import { getApplicationSchema, saveValues as save } from './api';\nimport { ACTION_TYPES } from './constants';\nimport config from './config/config.json';\nimport { notificationConfigForBundle } from './Utilities/functions';\n\nexport const getNotificationSchema = ({ bundleName, apiVersion }) => ({\n  type: ACTION_TYPES.GET_NOTIFICATION_SCHEMA,\n  payload: getApplicationSchema(\n    notificationConfigForBundle(bundleName)?.application,\n    apiVersion,\n    notificationConfigForBundle(bundleName)?.resourceType\n  ),\n  meta: {\n    bundleName,\n    notifications: {\n      rejected: {\n        variant: 'danger',\n        title: \"Request for user's configuration failed\",\n        description: `User's configuration notification for this bundle does not exist.`,\n      },\n    },\n  },\n});\n\nexport const saveNotificationValues = ({ bundleName, values, apiVersion }) => ({\n  type: ACTION_TYPES.SAVE_NOTIFICATION_SCHEMA,\n  payload: save(\n    notificationConfigForBundle(bundleName)?.application,\n    values,\n    apiVersion,\n    notificationConfigForBundle(bundleName)?.resourceType\n  ),\n  meta: {\n    bundleName: bundleName,\n    noError: true,\n  },\n});\n\nexport const getEmailSchema = ({\n  application,\n  apiVersion,\n  resourceType = 'email-preference',\n  schema,\n  url,\n  apiName,\n}) => ({\n  type: ACTION_TYPES.GET_EMAIL_SCHEMA,\n  payload:\n    schema ||\n    getApplicationSchema(apiName || application, apiVersion, resourceType, url),\n  meta: {\n    appName: application,\n    notifications: {\n      rejected: {\n        variant: 'danger',\n        title: \"Request for user's configuration failed\",\n        description: `User's configuration email for ${config['email-preference']?.[application]?.title} application does not exist.`,\n      },\n    },\n  },\n});\n\nexport const saveEmailValues = ({\n  application,\n  values,\n  apiVersion,\n  resourceType = 'email-preference',\n  url,\n  apiName,\n}) => ({\n  type: ACTION_TYPES.SAVE_EMAIL_SCHEMA,\n  payload: save(apiName || application, values, apiVersion, resourceType, url),\n  meta: {\n    appName: application,\n    title: config['email-preference']?.[application]?.title,\n    noError: true,\n  },\n});\n","var map = {\n\t\"./config.json\": [\n\t\t25091\n\t],\n\t\"./data/general.json\": [\n\t\t14298,\n\t\t298\n\t],\n\t\"./data/unsubscribe.json\": [\n\t\t17814,\n\t\t814\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 40118;\nmodule.exports = webpackAsyncContext;"],"names":["FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","pristine","reset","useFormApi","noChanges","ActionGroup","Button","className","type","ouiaId","isDisabled","variant","onClick","propTypes","PropTypes","formProps","subscription","props","DescriptiveCheckbox","useFieldApi","label","title","description","isDanger","isGlobal","checkedWarning","input","onChange","checked","formOptions","Checkbox","isChecked","id","name","batch","getRegisteredFields","forEach","field","getFieldState","value","change","classNames","ExclamationTriangleIcon","FieldProvider","defaultProps","Loader","size","rest","validate","FormSpyProvider","Skeleton","DataListRow","hasError","_error","info","this","setState","fieldsKey","fields","state","DataListItemRow","DataListItemCells","dataListCells","DataListCell","isFilled","key","renderForm","Component","DataListLayout","sections","DataList","map","actualFields","Array","isArray","length","DataListItem","fieldsToRender","DESCRIPTIVE_CHECKBOX","LOADER","DATA_LIST","loaderField","component","booleanFunctions","getSchema","app","loaded","schema","notificationConfigForBundle","bundleName","config","useChromePush","push","useChrome","chromeHistory","e","link","preventDefault","replace","visibilityFunctions","insights","chrome","hasLoosePermissions","permissions","getUserPermissions","userPermissions","some","item","find","permission","Object","fromEntries","keys","methodName","calculatePermissions","Promise","all","flat","method","args","then","visibility","every","Boolean","calculateEmailConfig","dispatch","entries","url","apiName","apiVersion","localFile","isVisible","resolve","newMapper","getEmailSchema","application","reduce","acc","curr","getSection","storeSchema","success","concatApps","apps","slice","join","distributeSuccessError","promisses","allSettled","promise","index","meta","error","dispatchMessages","addNotification","dismissable","instance","response","data","JSON","parse","_e","getApplicationSchema","resourceType","saveValues","values","getNotificationSchema","ACTION_TYPES","payload","notifications","rejected","saveNotificationValues","save","noError","appName","saveEmailValues","webpackAsyncContext","req","__webpack_require__","o","Error","code","ids","t","module","exports"],"sourceRoot":""}