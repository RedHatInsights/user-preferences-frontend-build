{"version":3,"sources":["webpack:///./src/Utilities/getBaseName.js","webpack:///./src/entry.test.js"],"names":["getBaseName","pathname","release","pathName","split","shift","describe","it","expect","toEqual"],"mappings":"4FAAA,OAceA,UAdf,SAAqBC,GACjB,IAAIC,EAAU,IACRC,EAAWF,EAASG,MAAM,KAShC,OAPAD,EAASE,QAEW,SAAhBF,EAAS,KACTA,EAASE,QACTH,EAAU,UAGd,UAAUA,GAAV,OAAoBC,EAAS,GAA7B,YAAmCA,EAAS,IAAM,M,iCCXtD,oBAEAG,SAAS,yBAAyB,WAC9BC,GAAG,8CAA8C,WAC7CC,OAAOR,kBAAY,0BAA0BS,QAAQ,iBACrDD,OAAOR,kBAAY,sBAAsBS,QAAQ,gBAGrDF,GAAG,4CAA4C,WAC3CC,OAAOR,kBAAY,+BAA+BS,QAAQ,sBAC1DD,OAAOR,kBAAY,2BAA2BS,QAAQ","file":"js/3.js","sourcesContent":["function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1] || ''}`;\n}\n\nexport default getBaseName;\n","import getBaseName from './Utilities/getBaseName';\n\ndescribe('Utilities/getBaseName', () => {\n    it('should find the right base name on Stable ', () => {\n        expect(getBaseName('/insights/foo/bar/baz')).toEqual('/insights/foo');\n        expect(getBaseName('/rhcs/bar/bar/baz')).toEqual('/rhcs/bar');\n    });\n\n    it('should find the right base name on Beta ', () => {\n        expect(getBaseName('/beta/insights/foo/bar/baz')).toEqual('/beta/insights/foo');\n        expect(getBaseName('/beta/test/fff/bar/baz')).toEqual('/beta/test/fff');\n    });\n});\n"],"sourceRoot":""}