{"version":3,"sources":["webpack://insights-frontend-starter-app/./src/App.scss","webpack://insights-frontend-starter-app/./src/Routes.js","webpack://insights-frontend-starter-app/./src/App.js","webpack://insights-frontend-starter-app/./src/constants.js","webpack://insights-frontend-starter-app/./src/store/email-preferences.js","webpack://insights-frontend-starter-app/./src/store/notification-preferences.js","webpack://insights-frontend-starter-app/./src/store/index.js","webpack://insights-frontend-starter-app/./src/App.scss?75e2"],"names":["___CSS_LOADER_EXPORT___","push","module","id","Email","lazy","Notification","Routes","Suspense","fallback","Fragment","Switch","Route","path","pckg","component","rootClass","Redirect","to","props","history","useHistory","useEffect","insights","chrome","auth","getUser","location","href","register","notifications","notificationsReducer","init","identifyApp","appNav","on","event","navId","childProps","GET_EMAIL_SCHEMA","SAVE_EMAIL_SCHEMA","GET_NOTIFICATION_SCHEMA","SAVE_NOTIFICATION_SCHEMA","ACTION_TYPES","reduce","acc","curr","getSchema","store","payload","meta","appName","schema","loaded","emailPreferences","applyReducerHash","state","action","bundleName","notificationPreferences","registry","Error","middleware","ReducerRegistry","promiseMiddleware","notificationsMiddleware","autoDismiss","filter","item","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/396.84c8fc11ef47562ba0ae.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".email :root{--ins-color--orange: #ec7a08}.email button:focus{outline:none}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.scss\"],\"names\":[],\"mappings\":\"AAAA,aACM,4BAAoB,CAD1B,oBACgD,YAAY\",\"sourcesContent\":[\".email{\\n:root{--ins-color--orange: #ec7a08}button:focus{outline:none}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React, { Fragment, lazy, Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport pckg from '../package.json';\n\nconst Email = lazy(() =>\n  import(\n    /* webpackChunkName: \"Email\" */ './PresentationalComponents/Email/Email'\n  )\n);\n\nconst Notification = lazy(() =>\n  import(\n    /* webpackChunkName: \"Notification\" */ './PresentationalComponents/Notification/Notification'\n  )\n);\n\nexport const Routes = () => (\n  <Suspense fallback={Fragment}>\n    <Switch>\n      <Route path={pckg.routes.email} component={Email} rootClass=\"email\" />\n      <Route\n        path={pckg.routes.notification}\n        component={Notification}\n        rootClass=\"notification\"\n      />\n      <Redirect path=\"*\" to={pckg.routes.email} push />\n    </Switch>\n  </Suspense>\n);\n","import React, { Fragment, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport { register } from './store';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\n\nconst App = (props) => {\n  const history = useHistory();\n  useEffect(() => {\n    (async () => {\n      const user = await insights.chrome.auth.getUser();\n      if (!user) {\n        location.href = './';\n      }\n    })();\n\n    register({ notifications: notificationsReducer });\n    insights.chrome.init();\n    insights.chrome.identifyApp('email');\n\n    const appNav = insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n    return () => appNav();\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </Fragment>\n  );\n};\n\nexport default App;\n","export const GET_EMAIL_SCHEMA = '@@EMAIL/GET_SCHEMA';\nexport const SAVE_EMAIL_SCHEMA = '@@EMAIL/SAVE_VALUES';\n\nexport const GET_NOTIFICATION_SCHEMA = '@@NOTIFICATION/GET_SCHEMA';\nexport const SAVE_NOTIFICATION_SCHEMA = '@@NOTIFICATION/SAVE_VALUES';\n\nexport const ACTION_TYPES = ['_PENDING', '_FULFILLED', '_REJECTED'].reduce(\n  (acc, curr) => ({\n    ...acc,\n    ...{\n      [`${GET_EMAIL_SCHEMA}${curr}`]: GET_EMAIL_SCHEMA,\n      [`${SAVE_EMAIL_SCHEMA}${curr}`]: SAVE_EMAIL_SCHEMA,\n      [`${GET_NOTIFICATION_SCHEMA}${curr}`]: GET_NOTIFICATION_SCHEMA,\n      [`${SAVE_NOTIFICATION_SCHEMA}${curr}`]: SAVE_NOTIFICATION_SCHEMA,\n    },\n  }),\n  {\n    GET_EMAIL_SCHEMA,\n    SAVE_EMAIL_SCHEMA,\n    GET_NOTIFICATION_SCHEMA,\n    SAVE_NOTIFICATION_SCHEMA,\n  }\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../constants';\n\nconst defaultState = {};\n\nexport const loading = (store, { meta }) => {\n  return {\n    ...store,\n    [meta.appName]: {\n      schema: [],\n      loaded: false,\n    },\n  };\n};\n\nexport const getSchema = (store, { payload, meta }) => {\n  return {\n    ...store,\n    [meta.appName]: {\n      schema: payload || [],\n      loaded: true,\n    },\n  };\n};\n\nexport default {\n  emailPreferences: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_EMAIL_SCHEMA]: getSchema,\n      [`${ACTION_TYPES.GET_EMAIL_SCHEMA}_FULFILLED`]: getSchema,\n      [`${ACTION_TYPES.GET_EMAIL_SCHEMA}_PENDING`]: loading,\n      // eslint-disable-next-line no-unused-vars\n      [`${ACTION_TYPES.GET_EMAIL_SCHEMA}_REJECTED`]: (\n        state,\n        { payload, ...action }\n      ) => getSchema(state, action),\n    },\n    defaultState\n  ),\n};\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../constants';\n\nconst defaultState = {};\n\nexport const loading = (store, { meta }) => {\n  return {\n    ...store,\n    bundleName: meta.bundleName,\n    schema: {},\n    loaded: false,\n  };\n};\n\nexport const getSchema = (store, { payload, meta }) => {\n  return {\n    ...store,\n    bundleName: meta.bundleName,\n    schema: payload || {},\n    loaded: true,\n  };\n};\n\nexport default {\n  notificationPreferences: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_NOTIFICATION_SCHEMA]: getSchema,\n      [`${ACTION_TYPES.GET_NOTIFICATION_SCHEMA}_FULFILLED`]: getSchema,\n      [`${ACTION_TYPES.GET_NOTIFICATION_SCHEMA}_PENDING`]: loading,\n      // eslint-disable-next-line no-unused-vars\n      [`${ACTION_TYPES.GET_NOTIFICATION_SCHEMA}_REJECTED`]: (\n        state,\n        { payload, ...action }\n      ) => getSchema(state, action),\n    },\n    defaultState\n  ),\n};\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nexport { default as emailPreferences } from './email-preferences';\nexport { default as notificationPreferences } from './notification-preferences';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (registry) {\n    throw new Error('store already initialized');\n  }\n\n  registry = new ReducerRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ autoDismiss: true }),\n    ...middleware.filter((item) => typeof item !== 'undefined'),\n  ]);\n\n  //If you want to register all of your reducers, this is good place.\n  /*\n   *  registry.register({\n   *    someName: (state, action) => ({...state})\n   *  });\n   */\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}