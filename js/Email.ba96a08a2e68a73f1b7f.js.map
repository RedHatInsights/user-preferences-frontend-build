{"version":3,"sources":["webpack://insights-frontend-starter-app/./src/PresentationalComponents/Email/email.scss","webpack://insights-frontend-starter-app/./src/SmartComponents/FormComponents/descriptiveCheckbox.scss","webpack://insights-frontend-starter-app/./src/SmartComponents/FormComponents/DescriptiveCheckbox.js","webpack://insights-frontend-starter-app/./src/SmartComponents/FormComponents/Loader.js","webpack://insights-frontend-starter-app/./src/SmartComponents/FormComponents/DataListLayout.js","webpack://insights-frontend-starter-app/./src/SmartComponents/FormComponents/componentTypes.js","webpack://insights-frontend-starter-app/./src/api.js","webpack://insights-frontend-starter-app/./src/actions.js","webpack://insights-frontend-starter-app/./src/Utilities/constants.js","webpack://insights-frontend-starter-app/./src/Utilities/functions.js","webpack://insights-frontend-starter-app/./src/PresentationalComponents/shared/FormButtons.js","webpack://insights-frontend-starter-app/./src/PresentationalComponents/Email/Email.js","webpack://insights-frontend-starter-app/./src/PresentationalComponents/Email/email.scss?28c0","webpack://insights-frontend-starter-app/./src/SmartComponents/FormComponents/descriptiveCheckbox.scss?e74f","webpack://insights-frontend-starter-app/./src/config|lazy|/^\\.\\/.*$/|groupOptions: {}|namespace object"],"names":["___CSS_LOADER_EXPORT___","push","module","id","DescriptiveCheckbox","props","useFieldApi","type","label","title","description","isDanger","isGlobal","input","onChange","formOptions","useFormApi","Checkbox","isChecked","checked","name","batch","getRegisteredFields","forEach","field","getFieldState","value","change","data-type","className","classNames","propTypes","FieldProvider","PropTypes","defaultProps","Loader","size","rest","validate","FormSpyProvider","Skeleton","DataListRow","hasError","_error","info","this","setState","fieldsKey","fields","state","DataListItemRow","DataListItemCells","dataListCells","DataListCell","isFilled","key","renderForm","Component","DataListLayout","sections","DataList","aria-label","map","actualFields","Array","isArray","length","DataListItem","aria-labelledby","fieldsToRender","LOADER","DATA_LIST","instance","response","config","data","JSON","parse","_e","getApplicationSchema","application","apiVersion","resourceType","url","saveValues","values","getEmailSchema","schema","apiName","ACTION_TYPES","payload","meta","appName","notifications","rejected","variant","saveEmailValues","save","noError","loaderField","component","booleanFunctions","getSchema","app","loaded","visibilityFunctions","insights","chrome","hasLoosePermissions","permissions","getUserPermissions","userPermissions","some","item","find","permission","Object","fromEntries","keys","methodName","calculatePermissions","Promise","all","flat","method","args","then","visibility","every","Boolean","calculateEmailConfig","dispatch","entries","localFile","isVisible","resolve","newMapper","reduce","acc","curr","concatApps","apps","slice","join","distributeSuccessError","promisses","allSettled","promise","index","success","error","dispatchMessages","addNotification","dismissable","FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","pristine","reset","noChanges","ActionGroup","Button","ouiaId","isDisabled","onClick","formProps","subscription","useState","emailConfig","setEmailConfig","currentUser","setCurrentUser","isLoaded","setLoaded","useDispatch","useEffect","register","emailPreferences","auth","getUser","identity","user","store","useSelector","unsubscribe","promises","filter","action","personalInfoUrl","isProd","PageHeader","PageHeaderTitle","Main","Stack","hasGutter","StackItem","Card","CardHeader","TextContent","Text","TextVariants","CardBody","Fragment","email","rel","target","href","componentMapper","FormTemplate","storeSchema","getSection","calculateSection","onSubmit","Bullseye","Spinner","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose","webpackAsyncContext","req","__webpack_require__","o","e","Error","code","ids","t","exports"],"mappings":"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","file":"js/Email.ba96a08a2e68a73f1b7f.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".user-preferences .pref-email .pref-email__subs-info{padding-bottom:0}.user-preferences .pref-email .pf-c-data-list{border:0}.user-preferences .pref-email .pf-c-data-list .pref-c-title{min-width:155px;max-width:155px}.user-preferences .pref-email .pf-c-data-list .pf-c-data-list__item:last-of-type{border:0}.user-preferences .pref-email .pf-c-data-list .pf-c-data-list__item-content.pref-u-condensed{padding-top:0;padding-bottom:0}.user-preferences .pref-email .pf-c-data-list .pf-c-data-list__item-content .pf-c-data-list__cell>*{padding-bottom:var(--pf-global--spacer--md)}.user-preferences .pref-email .pf-c-data-list .pf-c-data-list__item-content .pf-c-data-list__cell>*:last-child{padding-bottom:0}.user-preferences .pref-email .pf-c-data-list .pf-c-data-list__item-row{padding-left:0}.user-preferences .pref-email .pf-c-data-list .pref-email__info-user-email{padding-left:19px}.user-preferences .pref-email .pf-c-data-list .pref-email__info-user-email a{padding-left:var(--pf-global--gutter)}.user-preferences .pref-email .pref-u-bold{font-weight:var(--pf-global--FontWeight--bold)}.user-preferences .pref-email div.pref-u-condensed{padding-top:var(--pf-global--spacer--sm);padding-bottom:0}.user-preferences .pref-email .pref-email__form-button{margin-right:16px}@media screen and (max-width: 768px){.user-preferences .pref-email .pf-c-data-list .pref-email__info-user-email{padding-left:0}.user-preferences .pref-email .pf-c-data-list .pref-email__info-user-email.pf-c-data-list__cell span{padding-bottom:var(--pf-global--spacer--sm)}.user-preferences .pref-email .pf-c-data-list .pref-email__info-user-email>*{display:block}.user-preferences .pref-email .pf-c-data-list .pref-email__info-user-email a{padding-left:0}.user-preferences .pref-email .pref-email__info .pf-c-card__body .pf-l-flex>div:first-of-type{flex-grow:0;flex-basis:100%}.user-preferences .pref-email .pref-email__info .pf-c-card__body .pf-l-flex .pref-email_loader span{margin-left:0}.user-preferences .pref-email .pf-c-data-list__item:last-of-type .pf-c-data-list__cell:last-of-type{padding-top:var(--pf-global--spacer--lg)}.user-preferences .pref-email ul.pf-c-data-list .pf-c-data-list__item div.pf-c-data-list__cell.pref-u-condensed{padding-top:0;padding-bottom:0}}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/PresentationalComponents/Email/email.scss\"],\"names\":[],\"mappings\":\"AAAA,qDACmC,gBAAgB,CADnD,8CACgF,QAAQ,CADxF,4DACmI,eAAe,CAAC,eAAe,CADlK,iFACkO,QAAQ,CAD1O,6FACsT,aAAa,CAAC,gBAAgB,CADpV,oGACua,2CAA2C,CADld,+GACgjB,gBAAgB,CADhkB,wEACunB,cAAc,CADroB,2EAC+rB,iBAAiB,CADhtB,6EAC4wB,qCAAqC,CADjzB,2CAC20B,8CAA8C,CADz3B,mDAC25B,wCAAwC,CAAC,gBAAgB,CADp9B,uDAC0/B,iBAAiB,CAAC,qCAD5gC,2EAC0mC,cAAc,CADxnC,qGAC4sC,2CAA2C,CADvvC,6EACmzC,aAAa,CADh0C,6EAC43C,cAAc,CAD14C,8FACu9C,WAAW,CAAC,eAAe,CADl/C,oGACqkD,aAAa,CADllD,oGACqqD,wCAAwC,CAD7sD,gHAC4yD,aAAa,CAAC,gBAAgB,CAAE\",\"sourcesContent\":[\".user-preferences{\\n.pref-email .pref-email__subs-info{padding-bottom:0}.pref-email .pf-c-data-list{border:0}.pref-email .pf-c-data-list .pref-c-title{min-width:155px;max-width:155px}.pref-email .pf-c-data-list .pf-c-data-list__item:last-of-type{border:0}.pref-email .pf-c-data-list .pf-c-data-list__item-content.pref-u-condensed{padding-top:0;padding-bottom:0}.pref-email .pf-c-data-list .pf-c-data-list__item-content .pf-c-data-list__cell>*{padding-bottom:var(--pf-global--spacer--md)}.pref-email .pf-c-data-list .pf-c-data-list__item-content .pf-c-data-list__cell>*:last-child{padding-bottom:0}.pref-email .pf-c-data-list .pf-c-data-list__item-row{padding-left:0}.pref-email .pf-c-data-list .pref-email__info-user-email{padding-left:19px}.pref-email .pf-c-data-list .pref-email__info-user-email a{padding-left:var(--pf-global--gutter)}.pref-email .pref-u-bold{font-weight:var(--pf-global--FontWeight--bold)}.pref-email div.pref-u-condensed{padding-top:var(--pf-global--spacer--sm);padding-bottom:0}.pref-email .pref-email__form-button{margin-right:16px}@media screen and (max-width: 768px){.pref-email .pf-c-data-list .pref-email__info-user-email{padding-left:0}.pref-email .pf-c-data-list .pref-email__info-user-email.pf-c-data-list__cell span{padding-bottom:var(--pf-global--spacer--sm)}.pref-email .pf-c-data-list .pref-email__info-user-email>*{display:block}.pref-email .pf-c-data-list .pref-email__info-user-email a{padding-left:0}.pref-email .pref-email__info .pf-c-card__body .pf-l-flex>div:first-of-type{flex-grow:0;flex-basis:100%}.pref-email .pref-email__info .pf-c-card__body .pf-l-flex .pref-email_loader span{margin-left:0}.pref-email .pf-c-data-list__item:last-of-type .pf-c-data-list__cell:last-of-type{padding-top:var(--pf-global--spacer--lg)}.pref-email ul.pf-c-data-list .pf-c-data-list__item div.pf-c-data-list__cell.pref-u-condensed{padding-top:0;padding-bottom:0}}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".user-preferences .pref-c-descriptive-checkbox span{display:block}.user-preferences .pref-c-descriptive-checkbox input.pf-c-check__input{align-self:start;margin-top:var(--pf-global--spacer--xs)}.user-preferences .pref-c-descriptive-checkbox .pref-c-checkbox-label{font-weight:var(--pf-global--FontWeight--bold)}.user-preferences .pref-c-descriptive-checkbox .pref-c-checkbox-label-error{color:var(--pf-global--danger-color--200)}.user-preferences .pref-c-descriptive-checkbox .pref-c-checkbox-description{font-size:var(--pf-global--FontSize--md);color:var(--pf-global--Color--100)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/SmartComponents/FormComponents/descriptiveCheckbox.scss\"],\"names\":[],\"mappings\":\"AAAA,oDACkC,aAAa,CAD/C,uEACqG,gBAAgB,CAAC,uCAAuC,CAD7J,sEACkN,8CAA8C,CADhQ,4EAC2T,yCAAyC,CADpW,4EAC+Z,wCAAwC,CAAC,kCAAkC\",\"sourcesContent\":[\".user-preferences{\\n.pref-c-descriptive-checkbox span{display:block}.pref-c-descriptive-checkbox input.pf-c-check__input{align-self:start;margin-top:var(--pf-global--spacer--xs)}.pref-c-descriptive-checkbox .pref-c-checkbox-label{font-weight:var(--pf-global--FontWeight--bold)}.pref-c-descriptive-checkbox .pref-c-checkbox-label-error{color:var(--pf-global--danger-color--200)}.pref-c-descriptive-checkbox .pref-c-checkbox-description{font-size:var(--pf-global--FontSize--md);color:var(--pf-global--Color--100)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport './descriptiveCheckbox.scss';\n\n// eslint-disable-next-line no-unused-vars\nconst DescriptiveCheckbox = (props) => {\n  const {\n    label,\n    title,\n    description,\n    isDanger,\n    isGlobal,\n    input: { onChange, ...input },\n  } = useFieldApi({\n    ...props,\n    type: 'checkbox',\n  });\n  const formOptions = useFormApi();\n  return (\n    <Checkbox\n      {...input}\n      isChecked={input.checked}\n      id={`descriptive-checkbox-${input.name}`}\n      onChange={(...props) => {\n        if (isGlobal) {\n          formOptions.batch(() => {\n            formOptions.getRegisteredFields().forEach((field) => {\n              if (typeof formOptions.getFieldState(field).value === 'boolean') {\n                formOptions.change(field, false);\n              }\n            });\n          });\n        } else {\n          formOptions.change('unsubscribe.from-all', false);\n        }\n\n        onChange(...props);\n      }}\n      data-type=\"descriptive-checkbox\"\n      className=\"pref-c-descriptive-checkbox\"\n      label={\n        <span\n          className={classNames('pref-c-checkbox-label', {\n            'pref-c-checkbox-label-error': isDanger || isGlobal,\n          })}\n        >\n          {label || title}\n        </span>\n      }\n      {...(description && {\n        description: (\n          <span className=\"pref-c-checkbox-description\">{description}</span>\n        ),\n      })}\n    />\n  );\n};\n\nDescriptiveCheckbox.propTypes = {\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  isDanger: PropTypes.bool,\n  isGlobal: PropTypes.bool,\n};\n\nDescriptiveCheckbox.defaultProps = {\n  name: '',\n  label: '',\n  isDanger: false,\n};\n\nexport default DescriptiveCheckbox;\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport PropTypes from 'prop-types';\n\nconst Loader = ({\n  name,\n  size,\n  FieldProvider,\n  validate,\n  FormSpyProvider,\n  formOptions,\n  ...rest\n}) => (\n  <div {...rest}>\n    <Skeleton size={size}></Skeleton>\n  </div>\n);\n\nLoader.propTypes = {\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n  validate: PropTypes.any,\n  name: PropTypes.string,\n  size: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  name: '',\n  size: 'md',\n};\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport {\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nclass DataListRow extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch(_error, info) {\n    this.setState({ hasError: info });\n  }\n\n  render() {\n    const { fieldsKey, label, fields, formOptions } = this.props;\n    const { hasError } = this.state;\n    return (\n      <DataListItemRow>\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell\n              isFilled={false}\n              className=\"pref-c-title pref-u-bold\"\n              key={`${fieldsKey}-title`}\n            >\n              {fieldsKey === 0 ? label : ''}\n            </DataListCell>,\n            <DataListCell isFilled key={`${fieldsKey}-content`}>\n              {hasError\n                ? 'Error while mapping fields, please check your schema if it has valid component types'\n                : formOptions?.renderForm(fields, formOptions)}\n            </DataListCell>,\n          ]}\n        />\n      </DataListItemRow>\n    );\n  }\n}\n\nDataListRow.propTypes = {\n  fieldsKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fields: PropTypes.array,\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  label: PropTypes.node,\n  name: PropTypes.string,\n  validate: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n};\n\n// eslint-disable-next-line no-unused-vars\nconst DataListLayout = (props) => {\n  const { sections, label, name } = useFieldApi(props);\n  const formOptions = useFormApi();\n  return (\n    <DataList aria-label={label || name} {...props}>\n      {sections.map(({ label, fields }, key) => {\n        const actualFields = Array.isArray(fields) ? fields : [fields];\n        return (\n          actualFields.length > 0 && (\n            <DataListItem name={name} key={key} aria-labelledby=\"simple-item1\">\n              {actualFields.map(({ fields: fieldsToRender }, fieldsKey) => (\n                <DataListRow\n                  key={`${key}-${fieldsKey}`}\n                  fieldsKey={fieldsKey}\n                  label={label}\n                  fields={fieldsToRender}\n                  formOptions={formOptions}\n                />\n              ))}\n            </DataListItem>\n          )\n        );\n      })}\n    </DataList>\n  );\n};\n\nDataListLayout.propTypes = {\n  sections: PropTypes.array,\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.any,\n  label: PropTypes.node,\n  name: PropTypes.string,\n  validate: PropTypes.any,\n  FormSpyProvider: PropTypes.any,\n};\n\nexport default DataListLayout;\n","export const DESCRIPTIVE_CHECKBOX = 'descriptiveCheckbox';\nexport const LOADER = 'loader';\nexport const DATA_LIST = 'section';\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport { instance };\n\ninstance.interceptors.response.use((response) => {\n  if (response?.config?.data) {\n    try {\n      return JSON.parse(response.config.data);\n    } catch (_e) {\n      return response.config.data;\n    }\n  }\n\n  return response;\n});\n\nexport const getApplicationSchema = (\n  application,\n  apiVersion = 'v1',\n  resourceType = '',\n  url\n) =>\n  instance.get(\n    `/api/${application}/${apiVersion}${url || `/user-config/${resourceType}`}`\n  );\n\nexport const saveValues = async (\n  application,\n  values,\n  apiVersion = 'v1',\n  resourceType = '',\n  url\n) =>\n  instance.post(\n    `/api/${application}/${apiVersion}${url || `/user-config/${resourceType}`}`,\n    values\n  );\n","import { getApplicationSchema, saveValues as save } from './api';\nimport { ACTION_TYPES } from './constants';\nimport config from './config/config.json';\n\nexport const getEmailSchema = ({\n  application,\n  apiVersion,\n  resourceType = 'email-preference',\n  schema,\n  url,\n  apiName,\n}) => ({\n  type: ACTION_TYPES.GET_EMAIL_SCHEMA,\n  payload:\n    schema ||\n    getApplicationSchema(apiName || application, apiVersion, resourceType, url),\n  meta: {\n    appName: application,\n    notifications: {\n      rejected: {\n        variant: 'danger',\n        title: \"Request for user user's configuration failed\",\n        description: `User's configuration email for ${config['email-preference']?.[application]?.title} application does not exist.`,\n      },\n    },\n  },\n});\n\nexport const saveEmailValues = ({\n  application,\n  values,\n  apiVersion,\n  resourceType = 'email-preference',\n  url,\n  apiName,\n}) => ({\n  type: ACTION_TYPES.SAVE_EMAIL_SCHEMA,\n  payload: save(apiName || application, values, apiVersion, resourceType, url),\n  meta: {\n    appName: application,\n    title: config['email-preference']?.[application]?.title,\n    noError: true,\n  },\n});\n","import { LOADER } from '../SmartComponents/FormComponents';\n\nexport const loaderField = [{ fields: [{ component: LOADER }] }];\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { getEmailSchema } from '../actions';\nimport { loaderField } from './constants';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const getSchema = (app) =>\n  !app || !app.loaded ? loaderField : app.schema;\n\nconst withNegatedFunction = (booleanFunctions) => {\n  return {\n    ...booleanFunctions,\n    ...Object.fromEntries(\n      Object.keys(booleanFunctions).map((methodName) => [\n        `!${methodName}`,\n        (...args) => !booleanFunctions[methodName](...args),\n      ])\n    ),\n  };\n};\n\nexport const visibilityFunctions = withNegatedFunction({\n  ...insights.chrome?.visibilityFunctions,\n  hasLoosePermissions: async (permissions = []) => {\n    const userPermissions = await insights.chrome.getUserPermissions();\n    return permissions.some((item) =>\n      userPermissions?.find(({ permission }) => permission === item)\n    );\n  },\n});\n\nexport const calculatePermissions = (permissions) =>\n  Promise.all(\n    [permissions]\n      .flat()\n      .map(({ method, args }) =>\n        visibilityFunctions?.[method]?.(...(args || []))\n      )\n  ).then((visibility) => visibility.every(Boolean));\n\nexport const calculateEmailConfig = (\n  { 'email-preference': config } = { 'email-preference': {} },\n  dispatch = () => {}\n) =>\n  Object.entries(config)\n    .map(\n      ([\n        key,\n        { permissions, url, apiName, apiVersion, localFile, ...rest },\n      ]) => {\n        const isVisible = permissions\n          ? calculatePermissions(permissions)\n          : true;\n        (async () => {\n          const schemaVisible = await Promise.resolve(isVisible);\n          if (schemaVisible) {\n            if (localFile) {\n              const newMapper = (await import(`../config/${localFile}`))\n                .default;\n              dispatch(getEmailSchema({ schema: newMapper, application: key }));\n            } else {\n              dispatch(\n                getEmailSchema({ application: key, url, apiName, apiVersion })\n              );\n            }\n          }\n        })();\n\n        return {\n          [key]: {\n            localFile,\n            isVisible,\n            url,\n            apiName,\n            apiVersion,\n            ...rest,\n          },\n        };\n      }\n    )\n    .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n\nexport const getSection = (\n  key,\n  schema = {},\n  storeSchema,\n  success = () => {}\n) => {\n  if (schema.isVisible === true) {\n    return {\n      label: schema?.title,\n      name: key,\n      fields: schema?.fields || getSchema(storeSchema),\n    };\n  } else {\n    Promise.resolve(schema.isVisible).then(success);\n\n    return {\n      label: <Skeleton />,\n      name: key,\n      fields: loaderField,\n    };\n  }\n};\n\nexport const concatApps = (apps = []) => {\n  return `${apps.slice(0, apps.length - (apps.length > 1)).join(', ')}${\n    apps.length >= 2 ? ` and ${apps[apps.length - 1]}` : ''\n  }`;\n};\n\nexport const distributeSuccessError = (promisses = []) => {\n  return Promise.allSettled(promisses.map(({ promise }) => promise)).then(\n    (apps) => {\n      return apps.reduce(\n        (acc, { value }, index) => ({\n          ...acc,\n          [value ? 'success' : 'error']: [\n            ...acc[value ? 'success' : 'error'],\n            promisses[index]?.meta?.title,\n          ],\n        }),\n        { success: [], error: [] }\n      );\n    }\n  );\n};\n\nexport const dispatchMessages = (\n  dispatch = () => undefined,\n  success = [],\n  error = []\n) => {\n  if (error.length !== 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: `Email preferences for ${concatApps(\n          success\n        )} successfully saved`,\n      })\n    );\n\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: `Email preferences for ${concatApps(\n          error\n        )} unsuccessfully saved`,\n      })\n    );\n  }\n\n  if (error.length === 0 && success.length !== 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'success',\n        title: 'Preferences successfully saved',\n      })\n    );\n  }\n\n  if (error.length !== 0 && success.length === 0) {\n    dispatch(\n      addNotification({\n        dismissable: false,\n        variant: 'danger',\n        title: 'Preferences unsuccessfully saved',\n      })\n    );\n  }\n};\n","import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport { ActionGroup } from '@patternfly/react-core';\n\nconst FormButtons = ({\n  dirtyFieldsSinceLastSubmit,\n  submitSucceeded,\n  pristine,\n}) => {\n  const { reset } = useFormApi();\n  const noChanges =\n    isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  return (\n    <ActionGroup>\n      <Button\n        className=\"pref-email__form-button\"\n        type=\"submit\"\n        ouiaId=\"user-pref-primary-button\"\n        isDisabled={noChanges}\n        variant=\"primary\"\n      >\n        Save\n      </Button>\n      <Button\n        variant=\"link\"\n        ouiaId=\"user-pref-reset-button\"\n        isDisabled={noChanges}\n        onClick={() => reset()}\n      >\n        Cancel\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.arrayOf(\n    PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.bool,\n      ]),\n    })\n  ),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport './email.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  componentMapper,\n  FormTemplate,\n} from '@data-driven-forms/pf4-component-mapper';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport {\n  Card,\n  CardBody,\n  Stack,\n  StackItem,\n  CardHeader,\n  TextContent,\n  Text,\n  TextVariants,\n  Spinner,\n  Bullseye,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n} from '@patternfly/react-core';\nimport FormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport {\n  DESCRIPTIVE_CHECKBOX,\n  DATA_LIST,\n  LOADER,\n  DescriptiveCheckbox,\n  DataListLayout,\n  Loader,\n} from '../../SmartComponents/FormComponents';\nimport config from '../../config/config.json';\nimport { emailPreferences, register } from '../../store';\nimport { saveEmailValues } from '../../actions';\nimport {\n  calculateEmailConfig,\n  getSection,\n  distributeSuccessError,\n  dispatchMessages,\n} from '../../Utilities/functions';\nimport FormButtons from '../shared/FormButtons';\n\nconst Email = () => {\n  const [emailConfig, setEmailConfig] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoaded, setLoaded] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      register(emailPreferences);\n      const { identity } = await insights.chrome.auth.getUser();\n      setCurrentUser(identity.user);\n      setEmailConfig(await calculateEmailConfig(config, dispatch));\n      setLoaded(true);\n    })();\n  }, []);\n\n  const store = useSelector(({ emailPreferences }) => emailPreferences);\n\n  const saveValues = async ({ unsubscribe, ...values }) => {\n    const promises = Object.entries(emailConfig)\n      .filter(([, { isVisible }]) => isVisible === true)\n      .map(([application, { localFile, schema, url, apiName }]) => {\n        if (\n          !localFile &&\n          !schema &&\n          store?.[application]?.schema &&\n          Object.keys(store?.[application]?.schema).length > 0\n        ) {\n          const action = saveEmailValues({ application, values, url, apiName });\n          dispatch(action);\n\n          return {\n            promise: action.payload,\n            meta: action.meta,\n          };\n        }\n      })\n      .filter(Boolean);\n\n    const { success, error } = await distributeSuccessError(promises);\n    dispatchMessages(dispatch, success, error);\n  };\n\n  const calculateSection = (key, schema) => {\n    return getSection(key, schema, store?.[key], (isVisible) => {\n      const { ...config } = emailConfig;\n      if (isVisible === false) {\n        delete config[key];\n      } else {\n        config[key] = {\n          ...config[key],\n          isVisible,\n        };\n      }\n\n      setEmailConfig(config);\n    });\n  };\n\n  const personalInfoUrl = `https://www.${\n    insights.chrome.isProd ? '' : 'qa.'\n  }redhat.com/wapps/ugc/protected/emailChange.html`;\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Email preferences\" />\n      </PageHeader>\n      <Main className=\"pref-email\">\n        <Stack hasGutter>\n          <StackItem>\n            <Card className=\"pref-email__info\" ouiaId=\"user-pref-info-card\">\n              <CardHeader>\n                <TextContent>\n                  <Text component={TextVariants.h2}>Your information</Text>\n                </TextContent>\n              </CardHeader>\n              <CardBody>\n                <DataList>\n                  <DataListItem>\n                    <DataListItemRow>\n                      <DataListItemCells\n                        className=\"pref-u-condensed\"\n                        dataListCells={[\n                          <DataListCell\n                            isFilled={false}\n                            className=\"pref-c-title pref-u-bold pref-u-condensed\"\n                            key=\"email-title\"\n                          >\n                            Email address\n                          </DataListCell>,\n                          <DataListCell\n                            isFilled\n                            key=\"email-value\"\n                            className=\"pref-email__info-user-email pref-u-condensed\"\n                          >\n                            {isLoaded ? (\n                              <Fragment>\n                                <span>{currentUser.email}</span>\n                                <a\n                                  rel=\"noopener noreferrer\"\n                                  target=\"_blank\"\n                                  href={personalInfoUrl}\n                                >\n                                  Not correct?\n                                </a>\n                              </Fragment>\n                            ) : (\n                              <Skeleton size=\"lg\"></Skeleton>\n                            )}\n                          </DataListCell>,\n                        ]}\n                      />\n                    </DataListItemRow>\n                  </DataListItem>\n                </DataList>\n              </CardBody>\n            </Card>\n          </StackItem>\n          <StackItem>\n            <Card ouiaId=\"user-pref-email-subscriptions-card\">\n              <CardHeader className=\"pf-u-pb-0\">\n                <TextContent>\n                  <Text component={TextVariants.h2}>Email subscriptions</Text>\n                  <Text component={TextVariants.p}>\n                    Select the cloud.redhat.com emails you want to receive.\n                  </Text>\n                </TextContent>\n              </CardHeader>\n              <CardBody className=\"pref-email_form\">\n                {isLoaded ? (\n                  <FormRender\n                    componentMapper={{\n                      ...componentMapper,\n                      [DESCRIPTIVE_CHECKBOX]: DescriptiveCheckbox,\n                      [LOADER]: Loader,\n                      [DATA_LIST]: DataListLayout,\n                    }}\n                    FormTemplate={(props) => (\n                      <FormTemplate {...props} FormButtons={FormButtons} />\n                    )}\n                    schema={{\n                      fields: [\n                        {\n                          name: 'email-preferences',\n                          component: DATA_LIST,\n                          sections: Object.entries(\n                            emailConfig\n                          ).map(([key, schema]) =>\n                            calculateSection(key, schema)\n                          ),\n                        },\n                      ],\n                    }}\n                    onSubmit={saveValues}\n                  />\n                ) : (\n                  <Bullseye>\n                    <Spinner />\n                  </Bullseye>\n                )}\n              </CardBody>\n            </Card>\n          </StackItem>\n        </Stack>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default Email;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./email.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./email.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./descriptiveCheckbox.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./descriptiveCheckbox.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","var map = {\n\t\"./config.json\": [\n\t\t54084\n\t],\n\t\"./data/general.json\": [\n\t\t11636,\n\t\t636\n\t],\n\t\"./data/unsubscribe.json\": [\n\t\t58132,\n\t\t132\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 40118;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}