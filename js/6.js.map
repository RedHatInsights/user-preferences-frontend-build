{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./src/SmartComponents/FormComponents/Loader.test.js"],"names":["$","$find","find","addToUnscopables","arrayMethodUsesToLength","SKIPS_HOLES","USES_TO_LENGTH","Array","target","proto","forced","callbackfn","this","arguments","length","undefined","describe","it","wrapper","mount","size","expect","toJson","toMatchSnapshot"],"mappings":"0FACA,IAAIA,EAAI,EAAQ,IACZC,EAAQ,EAAQ,IAAgCC,KAChDC,EAAmB,EAAQ,KAC3BC,EAA0B,EAAQ,IAGlCC,GAAc,EAEdC,EAAiBF,EAHV,gBAMC,IAAIG,MAAM,GAAO,MAAE,WAAcF,GAAc,KAI3DL,EAAE,CAAEQ,OAAQ,QAASC,OAAO,EAAMC,OAAQL,IAAgBC,GAAkB,CAC1EJ,KAAM,SAAcS,GAClB,OAAOV,EAAMW,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAKzEZ,EAjBW,S,uGCDXa,SAAS,0BAA0B,WAE/BC,GAAG,2BAA2B,WAC1B,IAAMC,EAAUC,gBACZ,kBAAC,UAAD,CAAQC,KAAK,QAEjBC,OAAOC,IAAOJ,EAAQhB,KAAK,YAAYqB","file":"js/6.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","import React from 'react';\nimport { mount } from 'enzyme';\nimport toJson from 'enzyme-to-json';\nimport Loader from './Loader';\n\ndescribe('Loader component tests', () => {\n\n    it('should render correctly', () => {\n        const wrapper = mount(\n            <Loader size=\"sm\"></Loader>\n        );\n        expect(toJson(wrapper.find('Loader'))).toMatchSnapshot();\n    });\n});\n"],"sourceRoot":""}